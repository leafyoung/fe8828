plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
print(sel2)
# print(all(sel == sel2))
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red', type = 'l')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
print(len(sel))
print(len(sel2))
# print(all(sel == sel2))
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red', type = 'l')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
print(length(sel))
print(length(sel2))
# print(all(sel == sel2))
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red', type = 'l')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
print(length(sel))
print(length(sel2))
print(sel == sel2)
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red', type = 'l')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
# print(length(sel))
# print(length(sel2))
print(sel == sel2)
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red', type = 'l')
}
df6<-filter(newdata,{
sel <- (OptionType=="p"&&(Strike<Underlying))||(OptionType=="c"&&(Strike>Underlying))
print(sel)
sel2 <- ((Strike < Underlying) && OptionType == 'p') || ((Strike > Underlying) && OptionType == 'c')
print(sel2)
sel
})%>%mutate(price=(Bid+Ask)/2)
nasdap_goog_20201002_dt
str(nasdap_goog_20201002_dt)
nasdap_goog_20201002_dt <- nasdap_goog_20201002_clean %>% rowwise() %>%
mutate(vol = GBSVolatility((Bid + Ask ) / 2, type, Underlying, Strike, Time = as.numeric((Expiry - Today) / 365), r = 0.03, b = 0.0)) %>% ungroup
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
# print(length(sel))
# print(length(sel2))
print(sel == sel2)
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red', type = 'l')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
# print(length(sel))
# print(length(sel2))
print(sel == sel2)
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol, col = 'red')
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
# print(length(sel))
# print(length(sel2))
print(sel == sel2)
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
# print(length(sel))
# print(length(sel2))
print(sel == sel2)
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
# print(length(sel))
# print(length(sel2))
# print(sel == sel2)
sel
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
# print(sel2)
# print(length(sel))
# print(length(sel2))
# print(sel == sel2)
sel2
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
print(sel2)
# print(length(sel))
# print(length(sel2))
# print(sel == sel2)
sel2
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red')
}
df6<-filter(newdata,{
sel <- (OptionType=="p"&Strike<Underlying)|(OptionType=="c"&Strike>Underlying)
print(sel)
sel
})%>%mutate(price=(Bid+Ask)/2)
df6<-rowwise(df6)%>%mutate(Vol=GBSVolatility(price=price,OptionType,Underlying,Strike,as.numeric(as.Date(Exp.Date)-as.Date(Today))/365,r=0.03,b=0))%>% ungroup()%>%arrange(Strike)
plot(df6$Strike,df6$Vol,type="l",xlab="Strike",ylab="Vol",col="darkblue")
View(df6)
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
print(sel2)
# print(length(sel))
# print(length(sel2))
# print(sel == sel2)
sel2
}) %>% arrange(Strike)
points(df1$Strike, df1$vol, col = 'red')
}
nasdap_goog_20201002_dt %>% {
df <- .
plot(df$Strike, df$vol)
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
print(sel2)
# print(length(sel))
# print(length(sel2))
# print(sel == sel2)
sel2
}) %>% arrange(Strike)
plot(df1$Strike, df1$vol, col = 'red', type = 'l')
}
nasdap_goog_20201002_dt %>% {
df <- .
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
print(sel2)
# print(length(sel))
# print(length(sel2))
# print(sel == sel2)
sel2
}) %>% arrange(Strike)
plot(df1$Strike, df1$vol, col = 'red', type = 'l')
points(df$Strike, df$vol)
}
df6 %>% filter(OptionType == 'c') %>% {
df <- .
plot(df$Strike,df$Vol,type="l",xlab="Strike",ylab="Vol",col="darkblue")
}
df6 %>% filter(OptionType == 'c') %>% {
df <- .
plot(df$Strike,df$Vol,type="l",xlab="Strike",ylab="Vol",col="darkblue")
}
df6 %>% {
df <- .
df1 <- df %>% filter(OptionType == 'c')
plot(df$Strike,df$Vol,type="l",xlab="Strike",ylab="Vol",col="darkblue")
}
df6
df6<-rowwise(newdata)%>%mutate(Vol=GBSVolatility(price=price,OptionType,Underlying,Strike,as.numeric(as.Date(Exp.Date)-as.Date(Today))/365,r=0.03,b=0))%>% ungroup()%>%arrange(Strike)
df6<-rowwise(newdata)%>%mutate(Vol=GBSVolatility(price=(Bid+Ask)/2,OptionType,Underlying,Strike,as.numeric(as.Date(Exp.Date)-as.Date(Today))/365,r=0.03,b=0))%>% ungroup()%>%arrange(Strike)
df6
library(readr)
write_csv(df6, 'c:/temp/df6.csv')
adf
df6<-filter(newdata,{
sel <- (OptionType=="p"&Strike<Underlying)|(OptionType=="c"&Strike>Underlying)
print(sel)
sel
})%>%mutate(price=(Bid+Ask)/2)
df6<-rowwise(df6)%>%mutate(Vol=GBSVolatility(price=(Bid+Ask)/2,OptionType,Underlying,Strike,as.numeric(as.Date(Exp.Date)-as.Date(Today))/365,r=0.03,b=0))%>% ungroup()%>%arrange(Strike)
write_csv(df6, 'c:/temp/df6_2.csv')
nasdap_goog_20201002_dt %>% {
df <- .
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
print(sel2)
# print(length(sel))
# print(length(sel2))
# print(sel == sel2)
sel2
}) %>% arrange(Strike)
plot(df1$Strike, df1$vol, col = 'red', type = 'l')
points(df$Strike, df$vol)
}
nasdap_goog_20201002_dt %>% {
df <- .
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
# print(sel)
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
print(sel2)
# print(length(sel))
# print(length(sel2))
# print(sel == sel2)
sel2
}) %>% arrange(Strike)
plot(df1$Strike, df1$vol, col = 'red', type = 'l')
points(df$Strike, df$vol)
}
nasdap_goog_20201002_dt
write_csv(nasdap_goog_20201002_dt, 'c:/temp/nasdap_goog_20201002_dt.csv')
library(tidyverse)
tibble(t = 1:10, v1 = 1:10, v2 = 10:1) %>% pivot_longer(cols = v1:v2)
tibble(t = 1:10, v1 = 1:10, v2 = 10:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) +
geom_line(aes(x = t, y = value, color = name))
tibble(t = 1:10, v1 = 1:10, v2 = 10:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) +
geom_line(aes(x = t, y = value, color = name))
tibble(t = 1:10, v1 = 1:10, v2 = 10:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_line(aes(x = t, y = value, color = name))
ggplot()
library(tidyverse)
library(conflicted)
library(tidyverse)
library(conflicted)
conflcted_prefer('lag', 'dplyr')
conflcted_prefer('filter', 'dplyr')
conflict_prefer('lag', 'dplyr')
conflict_prefer('filter', 'dplyr')
tibble(t = 1:10, v1 = 1:10, v2 = 10:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_line(aes(x = t, y = value, color = name))
tibble(t = 1:10, v1 = 1:10, v2 = 10:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_density(aes(x = t, y = value, color = name))
tibble(t = 1:10, v1 = 1:10, v2 = 10:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_density(aes(x = t, y = value, color = name))
tibble(t = 1:10, v1 = 1:10, v2 = 10:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, color = name))
tibble(t = 1:10, v1 = 1:10, v2 = 3:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name))
tibble(t = 1:10, v1 = 1:10, v2 = 3:1) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name))
tibble(t = 1:10, v1 = 1:10, v2 = 3:1) %>% pivot_longer(cols = v1:v2)
tibble(t = 1:10, v1 = 1:10, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name))
tibble(t = 1:10, v1 = 1:10, v2 = 30:21) %>% pivot_longer(cols = v1:v2)
tibble(t = 1:10, v1 = 1:10, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
distinct(t, name)
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name))
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name), position = 'fill')
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name)) # , position = 'fill'
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name), position = 'fill')
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>% mutate(vv = 1:value)
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>% mutate(vv = list(1:value))
df <- tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>% mutate(vv = list(1:value))
df[1,'vv']
df[1,'vv',drop=TRUE]
df[20,'vv',drop=TRUE]
df <- tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(1:value)) %>% ungroup
df
df <- tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(1:value)) %>% ungroup %>% unnest(vv)
df
df <- tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, value))) %>% ungroup %>% unnest(vv)
df
df <- tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, value))) %>% ungroup %>% unnest(vv) %>%
ggplot(.) + geom_bar(aes(x = t, y = vv, color = name))
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, value))) %>% ungroup %>% unnest(vv) %>%
ggplot(.) + geom_bar(aes(x = t, y = vv, color = name))
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, value))) %>% ungroup %>% unnest(vv) %>%
ggplot(.) + geom_bar(aes(x = t, color = name))
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, value))) %>% ungroup %>% unnest(vv) %>%
ggplot(.) + geom_bar(aes(x = t, fill = name))
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name), position = 'fill')
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name)) # , position = 'fill'
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, value))) %>% ungroup %>% unnest(vv) %>%
ggplot(.) + geom_bar(aes(x = t, fill = name))
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, value))) %>% ungroup %>% unnest(vv) %>%
ggplot(.) + geom_bar(aes(x = t, fill = name), position = 'fill')
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name), position = 'fill')
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, round(value,0)))) %>% ungroup %>% unnest(vv) %>%
ggplot(.) + geom_bar(aes(x = t, fill = name), position = 'fill')
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
ggplot(.) + geom_area(aes(x = t, y = value, fill = name), position = 'fill')
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, round(value,0)))) %>% ungroup %>% unnest(vv) %>% str
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, round(value,0)))) %>% ungroup %>% unnest(vv) %>% ungroup
tibble(t = 1:10, v1 = (1:10) * 2, v2 = 30:21) %>% pivot_longer(cols = v1:v2) %>%
rowwise %>% mutate(vv = list(rep(TRUE, round(value,0)))) %>% ungroup %>% unnest(vv) %>% ungroup %>% ungroup
setwd('E:/Dropbox/MFE/FE8828/2019/assignment/FE8828-FANG, YUAN/Assignment4/Book option trades')
## Read data
library(readxl)
library(tidyverse)
library(fOptions)
setwd('E:/Dropbox/MFE/FE8828/2019/assignment/FE8828-FANG, YUAN/Assignment4/Book option trades')
Call <- read_excel("Call.xlsx", col_types = c("text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric"))
Put <- read_excel("Put.xlsx", col_types = c("text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric"))
Call <- Call %>%
mutate(`Call/Put` = "c", `Expiry Date`= as.Date("2019-12-20"), Underlying = 1234.03) %>%
select(`Expiry Date`, Strike, `Open Interest`, Underlying, `Call/Put`, Bid, Ask)
Put <- read_excel("Put.xlsx", col_types = c("text",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric"))
Call <- read_excel("Call.xlsx", col_types = c("numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric"))
Put <- read_excel("Put.xlsx", col_types = c("numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric"))
Call <- Call %>%
mutate(`Call/Put` = "c", `Expiry Date`= as.Date("2019-12-20"), Underlying = 1234.03) %>%
select(`Expiry Date`, Strike, `Open Interest`, Underlying, `Call/Put`, Bid, Ask)
Put <- Put %>%
mutate(`Call/Put` = "p", `Expiry Date`= as.Date("2019-12-20"), Underlying = 1234.03) %>%
select(`Expiry Date`, Strike, `Open Interest`, Underlying, `Call/Put`, Bid, Ask)
## Count the total value
df <- bind_rows(Call,Put) %>%
mutate(Value = `Open Interest` * (Bid + Ask)/2)
sum(df[df$`Call/Put` == "c", ]$Value) # Total value of call
sum(df[df$`Call/Put` == "p", ]$Value) # Total value of put
sum(df$Value) # Total value of call and put
## Find those in the money and get their total interest
df %>%
dplyr::filter((`Call/Put` == "c" & Strike < Underlying) |
(`Call/Put` == "p" & Strike > Underlying)) %>%
summarise(total_open_interest = sum(`Open Interest`))
## Plot the volatility curve
df %>%
dplyr::filter(Bid != 0 & Ask != 0) %>%
mutate(Volatility =
ifelse((Strike < Underlying & `Call/Put` == "p") | (Strike > Underlying & `Call/Put` == "c"),0,NA)) %>%
dplyr::filter(!is.na(Volatility)) %>%
rowwise() %>%
mutate(Volatility = GBSVolatility(Ask, `Call/Put`, Underlying, Strike,
as.numeric((`Expiry Date`-as.Date("2019-09-16")))/365,
r = 0.03, b = 0)) %>%
ggplot(aes(Strike, Volatility)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE)
nasdap_goog_20201002_dt %>% {
df <- .
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
sel2
}) %>% arrange(Strike)
plot(df1$Strike, df1$vol, col = 'red', type = 'l')
points(df$Strike, df$vol)
}
library(readxl)
nasdap_goog_20201002 <- read_excel("E:/Dropbox/MFE/FE8828/2020/notes-2020/session_files/nasdap_goog_20201002.xlsx")
library(conflicted)
library(tidyverse)
library(fOptions)
conflict_prefer('lag', 'dplyr')
conflict_prefer('filter', 'dplyr')
nasdap_goog_20201002
colnames(nasdap_goog_20201002)
nasdap_goog_20201002_clean <- nasdap_goog_20201002 %>%
select(Strike, `Bid...4`, `Ask...5`, `Bid...11`, `Ask...12`, `Open Int....7`, `Open Int....14`) %>%
mutate(Today = as.Date('2020-10-02'), Underlying = 1458.42, Expiry = as.Date('2020-12-18')) %>%
{
v <- .
calls <- select(v, -`Bid...11`, -`Ask...12`,-`Open Int....14`) %>% rename(Bid = `Bid...4`, Ask = `Ask...5`, OI = `Open Int....7`) %>% mutate(type = 'c')
puts <- select(v, -`Bid...4`, -`Ask...5`,-`Open Int....7`) %>% rename(Bid = `Bid...11`, Ask = `Ask...12`, OI = `Open Int....14`) %>% mutate(type = 'p')
bind_rows(calls, puts)
}
nasdap_goog_20201002_dt <- nasdap_goog_20201002_clean %>% rowwise() %>%
mutate(vol = GBSVolatility((Bid + Ask ) / 2, type, Underlying, Strike, Time = as.numeric((Expiry - Today) / 365), r = 0.03, b = 0.0)) %>% ungroup
nasdap_goog_20201002_dt %>% {
df <- .
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
sel2
}) %>% arrange(Strike)
plot(df1$Strike, df1$vol, col = 'red', type = 'l')
points(df$Strike, df$vol)
}
nasdap_goog_20201002_dt <- nasdap_goog_20201002_clean %>% rowwise() %>%
mutate(vol = GBSVolatility(Ask, type, Underlying, Strike, Time = as.numeric((Expiry - Today) / 365), r = 0.03, b = 0.0)) %>% ungroup
nasdap_goog_20201002_dt %>% {
df <- .
df1 <- filter(df, {
sel <- ((Strike < Underlying) && type == 'p') || ((Strike > Underlying) && type == 'c')
sel2 <- ((Strike < Underlying) & type == 'p') | ((Strike > Underlying) & type == 'c')
sel2
}) %>% arrange(Strike)
plot(df1$Strike, df1$vol, col = 'red', type = 'l')
points(df$Strike, df$vol)
}
nasdap_goog_20201002_dt
nasdap_goog_20201002_dt %>% ggplot(.) + geom_bar(aes(x = OI, color = Strike))
min(nasdap_goog_20201002_dt$Strike)
max(nasdap_goog_20201002_dt$Strike)
nasdap_goog_20201002_dt %>% ggplot(.) + geom_bar(aes(x = Strike, y = OI))
nasdap_goog_20201002_dt %>% ggplot(.) + geom_point(aes(x = Strike, y = OI))
nasdap_goog_20201002_dt %>% ggplot(.) + geom_point(aes(x = Strike, y = OI, color = Type))
nasdap_goog_20201002_dt %>% ggplot(.) + geom_point(aes(x = Strike, y = OI, color = type))
Underlying
