{
Str <- jj
}
}
return(Str)
}
for(ii in 1:12){
df_sub <- dplyr::filter(df, month == ii)
start_date <- min(df_sub$Date)
end_date <- max(df_sub$Date)
start_price <- df_sub$Close[1]
df_sub <- mutate(df_sub,volatility = VXAZNCLS/100)
start_volatility <- df_sub$volatility[1]
implied_vol[ii] <- start_volatility
df_sub <- mutate(df_sub,time_to_M = as.numeric(difftime(as.POSIXct(end_date), as.POSIXct(df_sub$Date, tz="UTC"),
units="days")/365))
implied_strike <- cal(type[ii],start_price,df_sub$time_to_M[1],start_volatility)
df_sub <-df_sub%>%mutate(premium = 100 * GBSOption(TypeFlag = type[ii],
S = df_sub$Close,
X = implied_strike,
Time = time_to_M,
r = 0.8/100, # interest rate
b = 0,
sigma = start_volatility)@price)%>%
mutate(Option_DoD_PnL = ifelse(df_sub$Date == start_date,
# On the 1st date, we count the cost of buying the option
premium * (-1),
premium - dplyr::lag(premium)))
df_sub <- df_sub %>%
rowwise() %>%
mutate(delta_hedge = 100 * GBSGreeks("delta", TypeFlag = type[ii], S=Close, X = implied_strike , Time = time_to_M,
r = 0.8/100, b = 0, sigma = start_volatility )  * (-1)) %>%
ungroup()%>%
mutate(Hedging_DoD_Pnl = ifelse(Date == start_date,
0,
dplyr::lag(delta_hedge) * (Close - dplyr::lag(Close))))
df_sub <- df_sub%>%
mutate(daily_PnL = Option_DoD_PnL + Hedging_DoD_Pnl,
Option_Final_PnL = cumsum(Option_DoD_PnL),
Hedging_Final_PnL = cumsum(Hedging_DoD_Pnl),
Final_PnL = Option_Final_PnL + Hedging_Final_PnL,
max_d = cummax(Final_PnL) - cummin(Final_PnL),
portfolio_value = Close * delta_hedge + premium,
return = ifelse(Date == start_date,
0,
daily_PnL/dplyr::lag(portfolio_value)))
ln_price <- log(df_sub$Close)/sqrt(1/252)
realized_vol[ii] <- sdDiff(ln_price)
df1 <- bind_rows(df1,df_sub)
max_drawdown[ii] <-
{
xs <- df_sub$Final_PnL
max(cummax(xs) - cummin(xs))
}
sharpe_ratio[ii] <- (mean(df_sub$return[2:length(df_sub$return)])-0.008/250)/stdev(df_sub$return[2:length(df_sub$return)])
}
max_drawdown
sharpe_ratio
realized_vol
implied_vol
res1 <-dplyr::filter(df1, month == 4)
ggplot(res1,aes(Date,Option_Final_PnL))+geom_col()
ggplot(res1,aes(Date,Hedging_Final_PnL))+geom_col()
ggplot(res1,aes(Date,Final_PnL))+geom_col()
res2 <-dplyr::filter(df1, month == 4)
ggplot(res2,aes(Date,max_d))+geom_col()
res3 <-dplyr::filter(df1, month == 4)
ggplot(res3, aes(time_to_M,Option_Final_PnL ))+geom_point()+geom_smooth()
ggplot(res3, aes(time_to_M,Hedging_Final_PnL ))+geom_point()+geom_smooth()
res4 <-dplyr::filter(df1, month == 4)
ggplot(res4, aes(Close,Option_DoD_PnL))+geom_point()+geom_smooth()
ggplot(res4, aes(Close,Hedging_DoD_Pnl))+geom_point()+geom_smooth()
plot(as.Date(maturity_date), sharpe_ratio)
difference_vol <- (implied_vol - realized_vol)**2
plot(difference_vol,sharpe_ratio)
library(readxl)
library(tidyverse)
library(fOptions)
library(xts)
library(matrixStats)
knitr::opts_chunk$set(echo = TRUE)
vol<- read_excel("~/Desktop/NTU/PROGRAMMING WEB APPLICATIONS IN FINANCE/FE8828-Qu Mengyuan/group project/VXAZNCLS.xlsx",
col_types = c("date", "numeric"))
close <- read_excel("~/Desktop/NTU/PROGRAMMING WEB APPLICATIONS IN FINANCE/FE8828-Qu Mengyuan/group project/VXAZNCLS.xlsx",
sheet = "Sheet2", col_types = c("date", "numeric"))
plot(as.Date(maturity_date), sharpe_ratio)
library(readxl)
library(tidyverse)
library(fOptions)
library(xts)
knitr::opts_chunk$set(echo = TRUE)
vol<- read_excel("~/Desktop/NTU/PROGRAMMING WEB APPLICATIONS IN FINANCE/FE8828-Qu Mengyuan/group project/VXAZNCLS.xlsx",
col_types = c("date", "numeric"))
close <- read_excel("~/Desktop/NTU/PROGRAMMING WEB APPLICATIONS IN FINANCE/FE8828-Qu Mengyuan/group project/VXAZNCLS.xlsx",
sheet = "Sheet2", col_types = c("date", "numeric"))
plot(maturity_date, sharpe_ratio)
library(readxl)
library(tidyverse)
library(fOptions)
library(xts)
library(matrixStats)
knitr::opts_chunk$set(echo = TRUE)
vol<- read_excel("~/Desktop/NTU/PROGRAMMING WEB APPLICATIONS IN FINANCE/FE8828-Qu Mengyuan/group project/VXAZNCLS.xlsx",
col_types = c("date", "numeric"))
close <- read_excel("~/Desktop/NTU/PROGRAMMING WEB APPLICATIONS IN FINANCE/FE8828-Qu Mengyuan/group project/VXAZNCLS.xlsx",
sheet = "Sheet2", col_types = c("date", "numeric"))
df <- left_join(close,vol,by = c("Date"="observation_date"))
df <- mutate(df, month = as.numeric(substring(df$Date,6,7)))
max_drawdown <- rep(0,12)
sharpe_ratio <- rep(0,12)
type <- c("c","c","p","c","c","p","c","c","c","p","p","p")
df1 <- dplyr::filter(df, month == 0)
realized_vol <- rep(0,12)
implied_vol <-rep(0,12)
cal <- function(Type, Sp, maturity, sig){
Str <- Sp
for(jj in round(Sp-100):round(Sp+100)){
if( (GBSGreeks("delta", TypeFlag = Type, S=Sp, X = jj ,
Time = maturity, r = 0.8/100, b = 0, sigma = sig ) >= 0.245)&(
GBSGreeks("delta", TypeFlag = Type, S=Sp, X = jj ,
Time = maturity, r = 0.8/100, b = 0, sigma = sig ) <= 0.255))
{
Str <- jj
}
}
return(Str)
}
for(ii in 1:12){
df_sub <- dplyr::filter(df, month == ii)
start_date <- min(df_sub$Date)
end_date <- max(df_sub$Date)
start_price <- df_sub$Close[1]
df_sub <- mutate(df_sub,volatility = VXAZNCLS/100)
start_volatility <- df_sub$volatility[1]
implied_vol[ii] <- start_volatility
df_sub <- mutate(df_sub,time_to_M = as.numeric(difftime(as.POSIXct(end_date), as.POSIXct(df_sub$Date, tz="UTC"),
units="days")/365))
implied_strike <- cal(type[ii],start_price,df_sub$time_to_M[1],start_volatility)
df_sub <-df_sub%>%mutate(premium = 100 * GBSOption(TypeFlag = type[ii],
S = df_sub$Close,
X = implied_strike,
Time = time_to_M,
r = 0.8/100, # interest rate
b = 0,
sigma = start_volatility)@price)%>%
mutate(Option_DoD_PnL = ifelse(df_sub$Date == start_date,
# On the 1st date, we count the cost of buying the option
premium * (-1),
premium - dplyr::lag(premium)))
df_sub <- df_sub %>%
rowwise() %>%
mutate(delta_hedge = 100 * GBSGreeks("delta", TypeFlag = type[ii], S=Close, X = implied_strike , Time = time_to_M,
r = 0.8/100, b = 0, sigma = start_volatility )  * (-1)) %>%
ungroup()%>%
mutate(Hedging_DoD_Pnl = ifelse(Date == start_date,
0,
dplyr::lag(delta_hedge) * (Close - dplyr::lag(Close))))
df_sub <- df_sub%>%
mutate(daily_PnL = Option_DoD_PnL + Hedging_DoD_Pnl,
Option_Final_PnL = cumsum(Option_DoD_PnL),
Hedging_Final_PnL = cumsum(Hedging_DoD_Pnl),
Final_PnL = Option_Final_PnL + Hedging_Final_PnL,
max_d = cummax(Final_PnL) - cummin(Final_PnL),
portfolio_value = Close * delta_hedge + premium,
return = ifelse(Date == start_date,
0,
daily_PnL/dplyr::lag(portfolio_value)))
ln_price <- log(df_sub$Close)/sqrt(1/252)
realized_vol[ii] <- sdDiff(ln_price)
df1 <- bind_rows(df1,df_sub)
final_Pnl[ii] <- df_sub$Final_PnL[nrow(df_sub)]
max_drawdown[ii] <-
{
xs <- df_sub$Final_PnL
max(cummax(xs) - cummin(xs))
}
sharpe_ratio[ii] <- (mean(df_sub$return[2:length(df_sub$return)])-0.008/250)/stdev(df_sub$return[2:length(df_sub$return)])
}
final_Pnl
max_drawdown
sharpe_ratio
realized_vol
implied_vol
plot(maturity_date, sharpe_ratio)
plot(as.Date(Option_Expiry_Date), sharpe_ratio)
res1 <-dplyr::filter(df1, month == 5)
ggplot(res1,aes(Date,Option_Final_PnL))+geom_col()
ggplot(res1,aes(Date,Hedging_Final_PnL))+geom_col()
ggplot(res1,aes(Date,Final_PnL))+geom_col()
res1 <-dplyr::filter(df1, month == 4)
ggplot(res1,aes(Option_Final_PnL))+geom_density()
ggplot(res1,aes(Hedging_Final_PnL))+geom_density()
ggplot(max_drawdown)+geom_density()
densityPlot(max_drawdown)+geom_density()
df <- left_join(close,vol,by = c("Date"="observation_date"))
df <- mutate(df, month = as.numeric(substring(df$Date,6,7)))
max_drawdown <- rep(0,12)
sharpe_ratio <- rep(0,12)
maturity_date <- c()
type <- c("c","c","p","c","c","p","c","c","c","p","p","p")
df1 <- dplyr::filter(df, month == 0)
realized_vol <- rep(0,12)
implied_vol <-rep(0,12)
for(ii in 1:12){
df_sub <- dplyr::filter(df, month == ii)
start_date <- min(df_sub$Date)
end_date <- max(df_sub$Date)
maturity_date <- c(maturity_date, as.Date(end_date))
start_price <- df_sub$Close[1]
df_sub <- mutate(df_sub,volatility = VXAZNCLS/100)
start_volatility <- df_sub$volatility[1]
implied_vol[ii] <- start_volatility
df_sub <- mutate(df_sub,time_to_M = as.numeric(difftime(as.POSIXct(end_date), as.POSIXct(df_sub$Date, tz="UTC"), units="days")/365))
df_sub <-df_sub%>%mutate(premium = 100 * GBSOption(TypeFlag = type[ii],
S = df_sub$Close,
X = start_price,
Time = time_to_M,
r = 0.8/100, # interest rate
b = 0,
sigma = start_volatility)@price)%>%
mutate(Option_DoD_PnL = ifelse(df_sub$Date == start_date,
# On the 1st date, we count the cost of buying the option
premium * (-1),
premium - dplyr::lag(premium)))
df_sub <- df_sub %>%
rowwise() %>%
mutate(delta_hedge = 100 * GBSGreeks("delta", TypeFlag = type[ii], S=Close, X = start_price , Time = time_to_M, r = 0.8/100, b = 0, sigma = start_volatility )  * (-1)) %>%
ungroup()%>%
mutate(Hedging_DoD_Pnl = ifelse(Date == start_date,
0,
dplyr::lag(delta_hedge) * (Close - dplyr::lag(Close))))
df_sub <- df_sub%>%
mutate(
daily_PnL = Option_DoD_PnL + Hedging_DoD_Pnl,
Option_Final_PnL = cumsum(Option_DoD_PnL),
Hedging_Final_PnL = cumsum(Hedging_DoD_Pnl),
Final_PnL = Option_Final_PnL + Hedging_Final_PnL,
max_d = cummax(Final_PnL) - cummin(Final_PnL),
portfolio_value = Close * delta_hedge + premium,
return = ifelse(Date == start_date,
0,
daily_PnL/dplyr::lag(portfolio_value))
)
ln_price <- log(df_sub$Close)/sqrt(1/252)
realized_vol[ii] <- sdDiff(ln_price)
df1 <- bind_rows(df1,df_sub)
final_Pnl[ii] <- df_sub$Final_PnL[nrow(df_sub)]
max_drawdown[ii] <-
{
xs <- df_sub$Final_PnL
max(cummax(xs) - cummin(xs))
}
sharpe_ratio[ii] <- (mean(df_sub$return[2:length(df_sub$return)])-0.008/250)/stdev(df_sub$return[2:length(df_sub$return)])
}
backtest <- tibble(Option_Expiry_Date = Option_Expiry_Date, Sharpe_ratio = sharpe_ratio,
Final_PnL = final_Pnl, Max_Drawdown = max_drawdown)
final_Pnl
max_drawdown
sharpe_ratio
realized_vol
implied_vol
View(backtest)
ggplot(backtest,max_drawdown)+geom_density()
ggplot(backtest,aes(max_drawdown)+geom_density()
ggplot(backtest,aes(max_drawdown))+geom_density()
plot(as.Date(Option_Expiry_Date), sharpe_ratio)
ggplot(backtest,aes(final_Pnl))+geom_density()
res4 <-dplyr::filter(df1, month == 4)
ggplot(res4, aes(Close,Option_DoD_PnL))+geom_point()+geom_smooth()
ggplot(res4, aes(Close,Hedging_DoD_Pnl))+geom_point()+geom_smooth()
df <- left_join(close,vol,by = c("Date"="observation_date"))
df <- mutate(df, month = as.numeric(substring(df$Date,6,7)))
max_drawdown <- rep(0,12)
sharpe_ratio <- rep(0,12)
maturity_date <- c()
type <- c("c","c","p","c","c","p","c","c","c","p","p","p")
df1 <- dplyr::filter(df, month == 0)
for(ii in 1:12){
df_sub <- dplyr::filter(df, month == ii)
start_date <- min(df_sub$Date)
end_date <- max(df_sub$Date)
maturity_date <- c(maturity_date, as.Date(end_date))
start_price <- df_sub$Close[1]
df_sub <- mutate(df_sub,volatility = VXAZNCLS/100)
start_volatility <- df_sub$volatility[1]
df_sub <- mutate(df_sub,time_to_M = as.numeric(difftime(as.POSIXct(end_date), as.POSIXct(df_sub$Date, tz="UTC"), units="days")/365))
df_sub <-df_sub%>%mutate(premium = 100 * GBSOption(TypeFlag = type[ii],
S = df_sub$Close,
X = start_price,
Time = time_to_M,
r = 0.8/100, # interest rate
b = 0,
sigma = start_volatility)@price)%>%
mutate(Option_DoD_PnL = ifelse(df_sub$Date == start_date,
# On the 1st date, we count the cost of buying the option
premium * (-1),
premium - dplyr::lag(premium)))
df_sub <- df_sub %>%
rowwise() %>%
mutate(delta_hedge = 100 * GBSGreeks("delta", TypeFlag = type[ii], S=Close, X = start_price , Time = time_to_M, r = 0.8/100, b = 0, sigma = start_volatility )  * (-1)) %>%
ungroup()%>%
mutate(Hedging_DoD_Pnl = ifelse(Date == start_date,
0,
dplyr::lag(delta_hedge) * (Close - dplyr::lag(Close))))
df_sub <- df_sub%>%
mutate(
daily_PnL = Option_DoD_PnL + Hedging_DoD_Pnl,
Option_Final_PnL = cumsum(Option_DoD_PnL),
Hedging_Final_PnL = cumsum(Hedging_DoD_Pnl),
Final_PnL = Option_Final_PnL + Hedging_Final_PnL,
max_d = cummax(Final_PnL) - cummin(Final_PnL),
portfolio_value = Close * delta_hedge + premium,
return = ifelse(Date == start_date,
0,
daily_PnL/dplyr::lag(portfolio_value)))
df1 <- bind_rows(df1,df_sub)
final_Pnl[ii] <- df_sub$Final_PnL[nrow(df_sub)]
max_drawdown[ii] <-
{
xs <- df_sub$Final_PnL
max(cummax(xs) - cummin(xs))
}
sharpe_ratio[ii] <- (mean(df_sub$return[2:length(df_sub$return)])-0.008/250)/stdev(df_sub$return[2:length(df_sub$return)])
}
max_drawdown
sharpe_ratio
plot(maturity_date, sharpe_ratio)
df <- left_join(close,vol,by = c("Date"="observation_date"))
df <- mutate(df, month = as.numeric(substring(df$Date,6,7)))
max_drawdown <- rep(0,12)
sharpe_ratio <- rep(0,12)
maturity_date <- c()
type <- c("c","c","p","c","c","p","c","c","c","p","p","p")
df1 <- dplyr::filter(df, month == 0)
realized_vol <- rep(0,12)
implied_vol <-rep(0,12)
for(ii in 1:12){
df_sub <- dplyr::filter(df, month == ii)
start_date <- min(df_sub$Date)
end_date <- max(df_sub$Date)
maturity_date <- c(maturity_date, as.Date(end_date))
start_price <- df_sub$Close[1]
df_sub <- mutate(df_sub,volatility = VXAZNCLS/100)
start_volatility <- df_sub$volatility[1]
implied_vol[ii] <- start_volatility
df_sub <- mutate(df_sub,time_to_M = as.numeric(difftime(as.POSIXct(end_date), as.POSIXct(df_sub$Date, tz="UTC"), units="days")/365))
df_sub <-df_sub%>%mutate(premium = 100 * GBSOption(TypeFlag = type[ii],
S = df_sub$Close,
X = start_price,
Time = time_to_M,
r = 0.8/100, # interest rate
b = 0,
sigma = start_volatility)@price)%>%
mutate(Option_DoD_PnL = ifelse(df_sub$Date == start_date,
# On the 1st date, we count the cost of buying the option
premium * (-1),
premium - dplyr::lag(premium)))
df_sub <- df_sub %>%
rowwise() %>%
mutate(delta_hedge = 100 * GBSGreeks("delta", TypeFlag = type[ii], S=Close, X = start_price , Time = time_to_M, r = 0.8/100, b = 0, sigma = start_volatility )  * (-1)) %>%
ungroup()%>%
mutate(Hedging_DoD_Pnl = ifelse(Date == start_date,
0,
dplyr::lag(delta_hedge) * (Close - dplyr::lag(Close))))
df_sub <- df_sub%>%
mutate(
daily_PnL = Option_DoD_PnL + Hedging_DoD_Pnl,
Option_Final_PnL = cumsum(Option_DoD_PnL),
Hedging_Final_PnL = cumsum(Hedging_DoD_Pnl),
Final_PnL = Option_Final_PnL + Hedging_Final_PnL,
max_d = cummax(Final_PnL) - cummin(Final_PnL),
portfolio_value = Close * delta_hedge + premium,
return = ifelse(Date == start_date,
0,
daily_PnL/dplyr::lag(portfolio_value))
)
ln_price <- log(df_sub$Close)/sqrt(1/252)
realized_vol[ii] <- sdDiff(ln_price)
df1 <- bind_rows(df1,df_sub)
final_Pnl[ii] <- df_sub$Final_PnL[nrow(df_sub)]
max_drawdown[ii] <-
{
xs <- df_sub$Final_PnL
max(cummax(xs) - cummin(xs))
}
sharpe_ratio[ii] <- (mean(df_sub$return[2:length(df_sub$return)])-0.008/250)/stdev(df_sub$return[2:length(df_sub$return)])
}
backtest <- tibble(Option_Expiry_Date = maturity_date, Sharpe_ratio = sharpe_ratio,
Final_PnL = final_Pnl, Max_Drawdown = max_drawdown)
final_Pnl
max_drawdown
sharpe_ratio
realized_vol
implied_vol
plot(as.Date(maturity_date), sharpe_ratio)
res1 <-dplyr::filter(df1, month == 5)
ggplot(res1,aes(Date,Option_Final_PnL))+geom_col()
ggplot(res1,aes(Date,Hedging_Final_PnL))+geom_col()
ggplot(res1,aes(Date,Final_PnL))+geom_col()
ggplot(backtest,aes(final_Pnl))+geom_density()
res2 <-dplyr::filter(df1, month == 4)
ggplot(res2,aes(Date,max_d))+geom_col()
ggplot(backtest,aes(max_drawdown))+geom_density()
res3 <-dplyr::filter(df1, month == 4)
ggplot(res3, aes(time_to_M,Option_Final_PnL ))+geom_point()+geom_smooth()
ggplot(res3, aes(time_to_M,Hedging_Final_PnL ))+geom_point()+geom_smooth()
res4 <-dplyr::filter(df1, month == 4)
ggplot(res4, aes(Close,Option_DoD_PnL))+geom_point()+geom_smooth()
ggplot(res4, aes(Close,Hedging_DoD_Pnl))+geom_point()+geom_smooth()
plot(as.Date(maturity_date), sharpe_ratio)
difference_vol <- (implied_vol - realized_vol)**2
plot(difference_vol,sharpe_ratio)
plot(as.Date(maturity_date), sharpe_ratio)
library(readxl)
library(tidyverse)
library(fOptions)
library(xts)
library(matrixStats)
knitr::opts_chunk$set(echo = TRUE)
vol<- read_excel("~/Desktop/NTU/PROGRAMMING WEB APPLICATIONS IN FINANCE/FE8828-Qu Mengyuan/group project/VXAZNCLS.xlsx",
col_types = c("date", "numeric"))
close <- read_excel("~/Desktop/NTU/PROGRAMMING WEB APPLICATIONS IN FINANCE/FE8828-Qu Mengyuan/group project/VXAZNCLS.xlsx",
sheet = "Sheet2", col_types = c("date", "numeric"))
df <- left_join(close,vol,by = c("Date"="observation_date"))
df <- mutate(df, month = as.numeric(substring(df$Date,6,7)))
max_drawdown <- rep(0,12)
sharpe_ratio <- rep(0,12)
type <- c("c","c","p","c","c","p","c","c","c","p","p","p")
df1 <- dplyr::filter(df, month == 0)
realized_vol <- rep(0,12)
implied_vol <-rep(0,12)
cal <- function(Type, Sp, maturity, sig){
Str <- Sp
for(jj in round(Sp-100):round(Sp+100)){
if( (GBSGreeks("delta", TypeFlag = Type, S=Sp, X = jj ,
Time = maturity, r = 0.8/100, b = 0, sigma = sig ) >= 0.245)&(
GBSGreeks("delta", TypeFlag = Type, S=Sp, X = jj ,
Time = maturity, r = 0.8/100, b = 0, sigma = sig ) <= 0.255))
{
Str <- jj
}
}
return(Str)
}
for(ii in 1:12){
df_sub <- dplyr::filter(df, month == ii)
start_date <- min(df_sub$Date)
end_date <- max(df_sub$Date)
start_price <- df_sub$Close[1]
df_sub <- mutate(df_sub,volatility = VXAZNCLS/100)
start_volatility <- df_sub$volatility[1]
implied_vol[ii] <- start_volatility
df_sub <- mutate(df_sub,time_to_M = as.numeric(difftime(as.POSIXct(end_date), as.POSIXct(df_sub$Date, tz="UTC"),
units="days")/365))
implied_strike <- cal(type[ii],start_price,df_sub$time_to_M[1],start_volatility)
df_sub <-df_sub%>%mutate(premium = 100 * GBSOption(TypeFlag = type[ii],
S = df_sub$Close,
X = implied_strike,
Time = time_to_M,
r = 0.8/100, # interest rate
b = 0,
sigma = start_volatility)@price)%>%
mutate(Option_DoD_PnL = ifelse(df_sub$Date == start_date,
# On the 1st date, we count the cost of buying the option
premium * (-1),
premium - dplyr::lag(premium)))
df_sub <- df_sub %>%
rowwise() %>%
mutate(delta_hedge = 100 * GBSGreeks("delta", TypeFlag = type[ii], S=Close, X = implied_strike , Time = time_to_M,
r = 0.8/100, b = 0, sigma = start_volatility )  * (-1)) %>%
ungroup()%>%
mutate(Hedging_DoD_Pnl = ifelse(Date == start_date,
0,
dplyr::lag(delta_hedge) * (Close - dplyr::lag(Close))))
df_sub <- df_sub%>%
mutate(daily_PnL = Option_DoD_PnL + Hedging_DoD_Pnl,
Option_Final_PnL = cumsum(Option_DoD_PnL),
Hedging_Final_PnL = cumsum(Hedging_DoD_Pnl),
Final_PnL = Option_Final_PnL + Hedging_Final_PnL,
max_d = cummax(Final_PnL) - cummin(Final_PnL),
portfolio_value = Close * delta_hedge + premium,
return = ifelse(Date == start_date,
0,
daily_PnL/dplyr::lag(portfolio_value)))
ln_price <- log(df_sub$Close)/sqrt(1/252)
realized_vol[ii] <- sdDiff(ln_price)
df1 <- bind_rows(df1,df_sub)
final_Pnl[ii] <- df_sub$Final_PnL[nrow(df_sub)]
max_drawdown[ii] <-
{
xs <- df_sub$Final_PnL
max(cummax(xs) - cummin(xs))
}
sharpe_ratio[ii] <- (mean(df_sub$return[2:length(df_sub$return)])-0.008/250)/stdev(df_sub$return[2:length(df_sub$return)])
}
final_Pnl
max_drawdown
sharpe_ratio
realized_vol
implied_vol
res1 <-dplyr::filter(df1, month == 4)
ggplot(res1,aes(Date,Option_Final_PnL))+geom_col()
ggplot(res1,aes(Date,Hedging_Final_PnL))+geom_col()
ggplot(res1,aes(Date,Final_PnL))+geom_col()
res2 <-dplyr::filter(df1, month == 4)
ggplot(res2,aes(Date,max_d))+geom_col()
res3 <-dplyr::filter(df1, month == 4)
ggplot(res3, aes(time_to_M,Option_Final_PnL ))+geom_point()+geom_smooth()
ggplot(res3, aes(time_to_M,Hedging_Final_PnL ))+geom_point()+geom_smooth()
res4 <-dplyr::filter(df1, month == 4)
ggplot(res4, aes(Close,Option_DoD_PnL))+geom_point()+geom_smooth()
ggplot(res4, aes(Close,Hedging_DoD_Pnl))+geom_point()+geom_smooth()
