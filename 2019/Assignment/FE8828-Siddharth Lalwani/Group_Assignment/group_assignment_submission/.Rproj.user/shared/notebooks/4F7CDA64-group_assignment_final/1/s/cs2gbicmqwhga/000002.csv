"0","# Question 2 part 3"
"0","# if realised volaility is greater than implied volatility, ""Overall Pnl"" is some equation. Prove it"
"0","proof3 <- function(ss){"
"0","  realised_var = 0.0"
"0","  for (pos in 2:length(ss)){"
"0","    rt = log(ss[pos]) - log(ss[pos-1])"
"0","    realised_var <- realised_var+rt**2"
"0","  }"
"0","  realised_vol = ((250/30)*realised_var)**0.5"
"0","  # now volatility is realised_vol calculated, create the df as above"
"0","  days <- length(ss)"
"0","  df <- tibble(S=ss, days=1:days) %>% mutate(days=days-1)"
"0","  # define the implied volatility"
"0","  implied_vol <- realised_vol-0.1"
"0","  # calculate delta, gamma, vega and theta."
"0","  opt <- rowwise(df) %>% mutate("
"0","    price = GBSOption(""c"", S = S, X = 100, Time = (30-days)/250, r = 0, b = 0, sigma = implied_vol)@price,"
"0","    delta = GBSGreeks(""Delta"", ""c"", S = S, X = 100, Time = (30-days)/250, r = 0, b = 0, sigma = implied_vol),"
"0","    gamma = GBSGreeks(""Gamma"", ""c"", S = S, X = 100, Time = (30-days)/250, r = 0, b = 0, sigma = implied_vol),"
"0","    vega = GBSGreeks(""Vega"", ""c"", S = S, X = 100, Time = (30-days)/250, r = 0, b = 0, sigma = implied_vol), "
"0","    theta = GBSGreeks(""Theta"", ""c"", S = S, X = 100, Time = (30-days)/250, r = 0, b = 0, sigma = implied_vol)"
"0","  )"
"0","  opt[is.na(opt)] <- 0.0 # fill the last row theta and delta with 0.0"
"0","  opt$realised_vol<- realised_vol "
"0","  opt$implied_vol <- implied_vol "
"0","  dt <- 1/250"
"0","  # calculate the calculated pnl on a daily basis."
"0","  calc_results <- opt %>% mutate(calc_pnl = (0.5*gamma*((realised_vol^2) -(implied_vol^2))*S^2*dt))"
"0","  "
"0","  # # check against the R pnL"
"0","  # option_pnl_l <- list(1:nrow(opt)-1)"
"0","  # for (pos in 2:nrow(opt)){"
"0","  #   prev_opt_price <- opt$price[[pos-1]]"
"0","  #   # using in-built from R GBSoptions"
"0","  #   option_pnl <- GBSOption(""c"", S = opt$S[pos], X = 100,"
"0","  #                           Time = (30-opt$days[pos]) / 250, r = 0, b = 0, sigma = implied_vol)@price - prev_opt_price"
"0","  #   option_pnl_l[[pos-1]] = option_pnl"
"0","  # }"
"0","  "
"0","  # option_pnl_l<-as.numeric(unlist(option_pnl_l))"
"0","  # calc_results$R_pnl <- c(0,option_pnl_l)"
"0","  "
"0","  # summing up the calculated pnl for the 30 days period."
"0","  result_calc <- sum(calc_results$calc_pnl)"
"0","  # repeat another set of calculation using Note 2 to cross check."
"0","  # cost_option <- -calc_results$price[1] #cost of option at first day"
"0","  # final_payoff <- calc_results$S[length(calc_results$S)]-100 #final day pay off"
"0","  # option_pnl <- (GBSOption(""c"", S = calc_results$S[length(calc_results$S)], X = 100,"
"0","  #                          Time = 30/250, r = 0, b = 0, sigma = implied_vol)@price-calc_results$price)[length(calc_results$S)]"
"0","  # "
"0","  # note_pnl <- cost_option+final_payoff+option_pnl"
"0","  # printing out the results."
"0","  print(paste0(""The calculated PnL is: $"", round(result_calc,2)))"
"0","  # print(paste0(""The Note 2 suggested PnL is: $"", round(note_pnl,2)))"
"0","  return(round(result_calc,2))"
"0","}"
"0","# stock_prices <- get_price(100,31)"
"0","calc_pnl <- proof3(stock_prices)"
"1","[1]"
"1"," ""The calculated PnL is: $1.91"""
"1","
"
"0","# Final product do a histogram as in P2 above profit is positive. show that only implied lower than realised, then may earn."
