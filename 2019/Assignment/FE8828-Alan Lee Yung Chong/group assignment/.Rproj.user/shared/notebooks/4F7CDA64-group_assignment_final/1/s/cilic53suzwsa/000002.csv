"0","df_hist_vol <- read_csv(""VXGSCLS.csv"", "
"0","                        col_types = cols("
"0","                          DATE = col_date(format = ""%Y-%m-%d"")))"
"0","# renaming the data column to IV30"
"0","colnames(df_hist_vol)[colnames(df_hist_vol) == ""VXGSCLS""] <- ""IV30"""
"0","hist_vol <- df_hist_vol %>% dplyr::filter(IV30!=""."")"
"0","hist_vol$IV30 <- as.numeric(hist_vol$IV30)"
"0","hist_vol <- hist_vol%>%mutate(IV30=IV30/100)"
"0","# read goldman stock data."
"0","GS <- read_csv(""GS.csv"", "
"0","               col_types = cols("
"0","                 Date = col_date(format = ""%Y-%m-%d"")))"
"0","get_data<-function(df1, df2){"
"0","  # df1 = hist_vol"
"0","  # df2 = GS"
"0","  # purpose of this function is to merge 2 df together and prepare for analysis of 1 trade."
"0","  "
"0","  # create xts object that is easier to work on time series"
"0","  hist_vol_xts <- xts(x=hist_vol$IV30, order.by=hist_vol$DATE)"
"0","  price_xts <- xts(x=GS$Close, order.by=GS$Date)"
"0","  "
"0","  # price_vol_xts contains the date and the price and implied volatility."
"0","  price_vol_xts <- merge(hist_vol_xts,price_xts,join='inner')"
"0","  # renaming the columns."
"0","  colnames(price_vol_xts)<- c(""IV30"", ""Close"")"
"0","  return(price_vol_xts)"
"0","}"
"0","delta25<- function(S1,Time1,r1,b1,sigma1){"
"0","  X1= S1-1"
"0","  for(i in 1:100)"
"0","  {"
"0","    k1= GBSGreeks(""delta"", TypeFlag='p', "
"0","                                 S=S1, "
"0","                                 X=X1, "
"0","                                 Time=Time1,"
"0","                                 r=r1, "
"0","                                 b= b1,"
"0","                                 sigma=sigma1)"
"0","    if(k1 >-0.25)"
"0","      return(X1)"
"0","    X1=X1-1  "
"0","    }"
"0","}"
"0","# merge the 2 dataframe."
"0","merged <- get_data(hist_vol, GS)"
"0","# Creating the variables."
"0","dates <- index(merged)"
"0","start_date <- min(dates)"
"0","start_price <- merged[start_date, ""Close""]"
"0","start_volatility <- merged[start_date, ""IV30""]"
"0","# Creating new df"
"0","df <- tibble(date = dates)"
"0","df$Close <- coredata(merged[, ""Close""])"
"0","df$IV <- coredata(merged[, ""IV30""])"
"0","# ATM so exercise = strike price."
"0","X <- start_price"
"0","riskfree <- 0.8 / 100"
"0","# Vary S and Time everyday"
"0","S <- df$Close"
"0","# extract the month from the date"
"0","df$M_Y<-format(df$date,""%m-%y"")"
"0","# filter such that the date ends at 09/30/2019 (exactly 12 months.)"
"0","df <- df %>% subset(date<= ""2019-09-30"")"
"0","# Creating the variables."
"0","dates <- index(merged)"
"0","start_date <- min(dates)"
"0","#end_date <- max(dates) "
"0","df$day1 <- format(df$date,""%d"")"
"0","#start_price <- merged[start_date, ""Close""]"
"0","start_price <- delta25(df$Close[1],30,riskfree,0.0,df$IV[1])"
"0","start_volatility <- merged[start_date, ""IV30""]"
"0","df$premium=0"
"0","curr_mon=df$M_Y[1]"
"0","df$premium[1]= GBSOption(TypeFlag = ""p"","
"0","                             S = as.numeric(df$Close[1]),"
"0","                             X = as.numeric(start_price),"
"0","                             Time = (31-as.numeric(df$day1[1]))/365,"
"0","                             r = riskfree,"
"0","                             b = 0.0,"
"0","                             sigma = as.numeric(df$IV[1]))@price"
"0","df$Option_DoD_PnL=0 "
"0","df$delta_hedge = 0"
"0","df$Hedging_DoD_Pnl = 0"
"0","#Quantity"
"0","quantity<- 100"
"0","flag=0"
"0","df$Option_DoD_PnL[1]= -1*quantity*df$premium[1]"
"0","for(i in 2:nrow(df))"
"0","{"
"0","  if(df$M_Y[i]!=curr_mon)"
"0","  {"
"0","    #start_price=df$Close[i]"
"0","    start_price <- delta25(df$Close[i],30,riskfree,0.0,df$IV[i])"
"0","    curr_mon=df$M_Y[i]"
"0","    flag=1"
"0","    #Settling on the last day of month"
"0","    df$Option_DoD_PnL[i-1]=df$Option_DoD_PnL[i-1] + quantity*df$premium[i-1]"
"0","  }"
"0","  df$premium[i] = GBSOption(TypeFlag = ""p"","
"0","                             S = as.numeric(df$Close[i]),"
"0","                             X = as.numeric(start_price),"
"0","                             Time = (31-as.numeric(df$day1[i]))/365,"
"0","                             r = riskfree,"
"0","                             b = 0.0,"
"0","                             sigma = as.numeric(df$IV[i]))@price"
"0","  "
"0","  "
"0","  df$delta_hedge[i] = GBSGreeks(""delta"", TypeFlag='p', "
"0","                                 S=as.numeric(df$Close[i]), "
"0","                                 X=start_price, "
"0","                                 Time=(31-as.numeric(df$day1[i]))/365,"
"0","                                 r=riskfree, "
"0","                                 b= 0.0,"
"0","                                 sigma=as.numeric(df$IV[i]))  "
"0","  if(flag==1){"
"0","    df$Option_DoD_PnL[i]= -1*quantity*df$premium[i]"
"0","    df$Hedging_DoD_Pnl[i-1]=0"
"0","    if(i-2>1)"
"0","      df$Hedging_DoD_Pnl[i]=-1*df$delta_hedge[i]*quantity*(df$Close[i] - df$Close[i-2])"
"0","  }"
"0","  else{"
"0","    df$Option_DoD_PnL[i]=(df$premium[i]-df$premium[i-1])*quantity"
"0","    df$Hedging_DoD_Pnl[i] = -1*df$delta_hedge[i]*quantity*(df$Close[i] - df$Close[i-1])"
"0","  }"
"0","  flag=0"
"0","}"
"0","df_pnl <- df %>% mutate(DoD_PnL = Option_DoD_PnL + Hedging_DoD_Pnl)"
