make_choice <- function(N,split_number)
{
input_list <- sample(1:N,N) #generate a input list
input_list_e <- input_list[1:split_number]
input_list_s <- input_list[(split_number+1):N] #split the list
benchmark <- max(input_list_e)  #the benchmark is the maximum number in the evaluation group
result <- 0 #inital the result
for(i in (split_number+1):(N-1)) #selecting from the first member in the selection group
{
if(input_list[i] > benchmark)
{
result <- input_list[i]
break
}
}
return(result)
}
knitr::opts_chunk$set(echo = TRUE)
N <- 100
p <- c()
candidate <- c()
for(split_time in 1:(N/2))  #for each split time from 1 to N/2
{
successful_choice <- 0
for(j in 1:10000) # Simulate 100 times
{
candidate[j] <- make_choice(N,split_time)
if(candidate == N)
{
successful_choice <- successful_choice+1
}
}
p[split_time] <- successful_choice/100
}
library(shiny); runApp('shinyAssignment.R')
library(tidyverse)
library(lubridate)
library(bizdays)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", collapse = TRUE, cache = TRUE)
bank <- read.csv("https://goo.gl/PBQnBt", sep =";")
r = nrow(bank)
bank %>%
group_by(age_group = (age %/% 10)* 10) %>%
summarise(count = n()) %>%
arrange(age_group) -> res
res
plot(res$age_group, res$count)
#Option Pricing
data <- read.csv("/Users/Jiaqidong/Documents/OOP/Web Application/assignment3/option_data.csv",sep = ",", header = TRUE)
View(data)
#Option Pricing
library(fOptions)
library(bizdays)
library(tidyverse)
data <- read.csv("/Users/Jiaqidong/Documents/OOP/Web Application/assignment3/option_data.csv",sep = ",", header = TRUE)
df <- data_frame(data)
data$Expire
library(plyr)
colnames()
colnames(df)
df <- read.csv("/Users/Jiaqidong/Documents/OOP/Web Application/assignment3/option_data.csv",sep = ",", header = TRUE)
colnames(df)
df <- read.csv("/Users/Jiaqidong/Documents/OOP/Web Application/assignment3/option_data.csv",sep = ",", header = TRUE)
rename(df, c("Expiry Date"="Expire", "Strike" = "Strike","Open Interest" = "Open.Int","Underlying" = "Stock", "Call/Put" = "c.p"))
df
#Option Pricing
library(fOptions)
library(bizdays)
library(tidyverse)
library(plyr)
df <- read.csv("/Users/Jiaqidong/Documents/OOP/Web Application/assignment3/option_data.csv",sep = ",", header = TRUE)
rename(df, c("Expiry Date"="Expire", "Strike" = "Strike","Open Interest" = "Open.Int","Underlying" = "Stock", "Call/Put" = "c.p"))
rename(df, c("Expiry"="Expire Day", "Strike" = "Strike", "Open.Int" = "Open Interest","Stock" = "Underlying",  "c.p" ="Call/Put"))
df <- read.csv("/Users/Jiaqidong/Documents/OOP/Web Application/assignment3/option_data.csv",sep = ",", header = TRUE)
rename(df, c("Expire"="Expire Day", "Strike" = "Strike", "Open.Int" = "Open Interest","Stock" = "Underlying",  "c.p" ="Call/Put"))
df <- as.data.frame(df)
rename(df, c("Expire"="Expire Day", "Open.Int" = "Open Interest","Stock" = "Underlying",  "c.p" ="Call/Put"))
df_1 <- select(df,c("Expiry Date", "Strike", "Open Interest", "Underlying", "Call/Put", "Bid", "Ask")) %>%
Expiry Date
df <- read.csv("/Users/Jiaqidong/Documents/OOP/Web Application/assignment3/option_data.csv",sep = ",", header = TRUE)
df <- as.data.frame(df)
rename(df, c("Expire"="Expiry Day", "Open.Int" = "Open Interest","Stock" = "Underlying",  "c.p" ="Call/Put"))
df_1 <- select(df,c("Expiry Date", "Strike", "Open Interest", "Underlying", "Call/Put", "Bid", "Ask")) %>%
Expiry Date
df_1 <- select(df,c("Expiry Date", "Strike", "Open Interest", "Underlying", "Call/Put", "Bid", "Ask"))
rename(df, c("Expire"="Expiry Day", "Open.Int" = "Open Interest","Stock" = "Underlying",  "c.p" ="Call/Put"))
df_1 <- select(df,c("Expiry Day", "Strike", "Open Interest", "Underlying", "Call/Put", "Bid", "Ask"))
df <- as.data.frame(df)
rename(df, c("Expire"="Expiry Day", "Open.Int" = "Open Interest","Stock" = "Underlying",  "c.p" ="Call/Put"))
df_1 <- select(df,c("Expiry Day", "Strike", "Open Interest", "Underlying", "Call/Put", "Bid", "Ask"))
df_1 <- select(df,c("Expiry Day", "Strike", "Open Interest", "Underlying", "Call/Put", "Bid", "Ask"))
df.names()
df.columnname()
colnames(df)
rename(df, c("Expire"="Expiry Day", "Open.Int" = "Open Interest","Stock" = "Underlying",  "c.p" ="Call/Put"))
colnames(df)
df <- rename(df, c("Expire"="Expiry Day", "Open.Int" = "Open Interest","Stock" = "Underlying",  "c.p" ="Call/Put"))
colnames(df)
df_1 <- select(df,c("Expiry Day", "Strike", "Open Interest", "Underlying", "Call/Put", "Bid", "Ask"))
colnames(df_1)
df_1
df_c <- group_by(df_new, call/put) %>%
summarize(value= "Open Interest" *(Bid+Ask)/2)
df_new <- select(df,c("Expiry Day", "Strike", "Open Interest", "Underlying", "Call/Put", "Bid", "Ask"))
colnames(df_new)
df_c <- group_by(df_new, call/put) %>%
summarize(value= "Open Interest" *(Bid+Ask)/2)
df_c <- group_by(df_new, "call/put") %>%
summarize(value= "Open Interest" *(Bid+Ask)/2)
df_c <- group_by(df_new, 'call/put') %>%
summarize(value= 'Open Interest' *(Bid+Ask)/2)
View(df_new)
View(df_new)
View(df_new)
class(df_new$Open Interest)
class(df_new$'Open Interest')
class(df_new$'Bid')
df_c <- group_by(df_new, 'call/put') %>%
summarize(value= 'Open Interest' *(Bid+Ask)/2)
bank <- read.csv("https://goo.gl/PBQnBt", sep =";")
x <- full_join(distinct(bank, job) %>% mutate(dummy =1),
distinct(bank, education) %>% mutate(dummy=1),
by = "dummy") %>%   ##dummy -> combine two dataset without any relationship
select(-dummy)
y <- distinct(bank,job,education)
df1 <- anti_join(x,y,by=c("job","education"))
df2 <- anti_join(y,x,by=c("job","education"))
group_by(bank, age) %>% summarise(n=n()) %>% plot
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count=sum(ifelse(default == "no",0,1)))%>%
arrange(Average)
# bank_age <- group_by(bank, age) %>%
#             summarise(balance_mean = mean(balance),
#                       count = n(),
#                       default_count = sum(ifelse(default == "no",0,1)))
df1 <- group_by(bank,job) %>%
summarise(young = sum(age <=20))
df1
bank <- read.csv("https://goo.gl/PBQnBt", sep =";")
x <- full_join(distinct(bank, job) %>% mutate(dummy =1),
distinct(bank, education) %>% mutate(dummy=1),
by = "dummy") %>%   ##dummy -> combine two dataset without any relationship
select(-dummy)
y <- distinct(bank,job,education)
df1 <- anti_join(x,y,by=c("job","education"))
df2 <- anti_join(y,x,by=c("job","education"))
group_by(bank, age) %>% summarise(n=n()) %>% plot
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count=sum(ifelse(default == "no",0,1)))%>%
arrange(Average)
# bank_age <- group_by(bank, age) %>%
#             summarise(balance_mean = mean(balance),
#                       count = n(),
#                       default_count = sum(ifelse(default == "no",0,1)))
df1 <- group_by(bank,job) %>%
summarise(young = sum(age <=20))
df2 <- group_by(bank,job) %>%
summarise(old = sum( (age > 20) && (age <=50)))
df3 <-group_by(bank,job) %>%
summarise(older = sum(age>50))
# df <- distinct(bank, job) %>% arrange(job)
df <- data_frame(job=bank$job) #initalize a new dataframe
df <- left_join(df,df1, by="job")
df <- left_join(df, df2, by="job")
df <- left_join(df, df3,by="job")
mutate(df,nnn = 1:n(), x1 = as.Date(dt)) %>%
filter(is.na(x1)) %>%
{cate(paste0("Trong dates on rows: ", paste0(.$nnn,collapse = ",")))}
bank <- read.csv("https://goo.gl/PBQnBt", sep =";")
x <- full_join(distinct(bank, job) %>% mutate(dummy =1),
distinct(bank, education) %>% mutate(dummy=1),
by = "dummy") %>%   ##dummy -> combine two dataset without any relationship
select(-dummy)
y <- distinct(bank,job,education)
df1 <- anti_join(x,y,by=c("job","education"))
df2 <- anti_join(y,x,by=c("job","education"))
group_by(bank, age) %>% summarise(n=n()) %>% plot
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count=sum(ifelse(default == "no",0,1)))%>%
arrange(Average)
# bank_age <- group_by(bank, age) %>%
#             summarise(balance_mean = mean(balance),
#                       count = n(),
#                       default_count = sum(ifelse(default == "no",0,1)))
df1 <- group_by(bank,job) %>%
summarise(young = sum(age <=20))
df2 <- group_by(bank,job) %>%
summarise(old = sum( (age > 20) && (age <=50)))
df3 <-group_by(bank,job) %>%
summarise(older = sum(age>50))
# df <- distinct(bank, job) %>% arrange(job)
df <- data_frame(job=bank$job) #initalize a new dataframe
df <- left_join(df,df1, by="job")
df <- left_join(df, df2, by="job")
df <- left_join(df, df3,by="job")
mutate(df,nnn = 1:n(), x1 = as.Date(dt)) %>%
filter(is.na(x1)) %>%
{cate(paste0("Trong dates on rows: ", paste0(.$nnn,collapse = ",")))}
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count_yy=sum(ifelse(default == "no",0,1)), default_count_nn=sum(ifelse(default == "no",1,0)))%>%
arrange(Average)
bank <- read.csv("https://goo.gl/PBQnBt", sep =";")
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count=sum(ifelse(default == "no",0,1)))%>%
arrange(Average)
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count_yy=sum(ifelse(default == "no",0,1)), default_count_nn=sum(ifelse(default == "no",1,0)))%>%
arrange(Average)
View(bank)
View(bank)
bank_age <- group_by(bank, age) %>%
summarise(balance_mean = mean(balance),
count = n(),
default_count = sum(ifelse(default == "no",0,1)))
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count=sum(ifelse(default == "no",0,1)))%>%
arrange(Average)
bank <- read.csv("https://goo.gl/PBQnBt", sep =";")
group_by(bank, age) %>% summarise(n=n()) %>% plot
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count=sum(ifelse(default == "no",0,1)))%>%
arrange(Average)
bank_age <- group_by(bank, age) %>%
summarise(balance_mean = mean(balance),
count = n(),
default_count = sum(ifelse(default == "no",0,1)))
df1 <- group_by(bank,job) %>%
summarise(young = sum(age <=20))
df1
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count_yy=sum(ifelse(default == "no",0,1)), default_count_nn=sum(ifelse(default == "no",1,0)))%>%
arrange(Average)
library("dbplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
group_by(bank, job) %>%
summarise(Average=mean(age),max = max(age),min = min(age),default_count_yy=sum(ifelse(default == "no",0,1)), default_count_nn=sum(ifelse(default == "no",1,0)))%>%
arrange(Average)
group_by(bank, age) %>% summarise(n=n()) %>% plot
group_by(bank, age) %>% summarise(n=n())
bank %>%
group_by(age_group = (age %/% 10)* 10) %>%
summarise(count = n()) %>%
arrange(age_group) -> res
library(tidyverse)
library(lubridate)
library(bizdays)
library(tidyverse)
library(lubridate)
library(bizdays)
bank %>%
group_by(age_group = (age %/% 10)* 10) %>%
summarise(count = n()) %>%
arrange(age_group) -> res
group_by(bank,age_group = (age %/% 10)* 10) %>%
summarise(count = n()) %>%
arrange(age_group) -> res
bank <- read.csv("https://goo.gl/PBQnBt", sep =";")
group_by(bank,age_group = (age %/% 10)* 10) %>%
summarise(count = n()) %>%
arrange(age_group) -> res
