source('~/.active-rstudio-document', echo=TRUE)
shiny::runApp('Shiny1')
shiny::runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
install.packages("bizdays")
install.packages("tidyverse")
install.packages("fOptions")
v <- c(1, 3)
v[1] <- 3
v
## [1] 3 3
## [1] 3 3
v <- c(1, 3)
v[1] <- 3
v
data <- 10:1
match(c(1,3),data)
data[match(c(1,3),data)]
which(1==data | 3==data)
data <- 10:1
match(c(1,3),data)
data <- 10:1
data
data <- 10:1
data
match(c(1,3),data)
c
data <- 10:1
data
match(c(1,3),data)
v <- c(1, 3)
v[1] <- 3
v
sample(1:10,􀀃10,􀀃replace􀀃= FALSE)
sample(1:10,10,replace= FALSE)
sample(1:10,10,replace= FALSE)
sample(1:6,10,replace=FALSE)
sample(1:6,10,replace=TRUE)
cat(paste0("This variable a:", a, "\n"))
a <-13
cat(paste0("This variable a:", a, "\n"))
msg <- paste0("This variable a:", a, "\n")
print(msg)
cat(msg)
new_string <- paste0("This is ", "cat")
cat(new_string)
cat(new_string)
sub("D","ABC","DDD",fixed=FALSE)
sub("D","ABCD","DDD",fixed=FALSE)
sub("[^\\_]+\\_.*",�"USDCNY_M1")
sub("([^\\_]+)\\_.*","\\1","USDCNY_M1")
sub("([^\\_]+)\\_.","\\1","USDCNY_M1")
sub("([^\\_]+)\\_*","\\1","USDCNY_M1")
sub("([^\\_]+).*","\\1","USDCNY_M1")
sub("([^\\_]+)_.*","\\1","USDCNY_M1")
sub("([^\\_]+)\\_.*","\\1","USDCNY_M1")
sub("([^\\_]+)\\_.*","USDCNY_M1")
sub("([^\\_]+)\\_.*","\\1","USDCNY_M1")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([:alpha:])([:alphadigit:]([:alphadigit:]))")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([:alpha:])([:alphadigit:]([:alphadigit:]))","\\1","a34")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([:alpha:])([:alphadigit:]([:alphadigit:]))","\\1","334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([:alpha:]+)([:alphadigit:]([:alphadigit:]))","\\1","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([:alpha:])([:alphadigit:]([:alphadigit:]))","\\1 \\2 \\3","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:])([[:alphadigit:]([[:alphadigit:]))","\\1","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:])([[:alphadigit:]([[:alphadigit:]]))","\\1","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:])([[:alphadigit:]])([[:alphadigit:]])","\\1","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:]])([[:alphadigit:]])([[:alphadigit:]])","\\1","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:]])([[:digit:]])([[:alpha:]])","\\1","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:]])([[:digit:]])([[:alpha:]])","\\1 \\2 \\3","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:]])([[:digit:]])([[:alpha:]])","\\1\\2\\3","3334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:]])([[:digit:]])([[:alpha:]])","\\1\\2\\3","a334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:]])([[:alphadigit:]])([[:alphadigit:]])","\\1","a334")
#three chars
#can be digit or alphabet
#cannot start with digit
# should end with alphabet
sub("([[:alpha:]])([[:alphadigit:]])([[:alpha:]])","\\1 \\2 \\3","a334")
PRICES <- list(AAPL=400,MSFT=100)
PRICES$AAPL
install.packages("purrr")
df <- data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
# df["date"]: gives a data frame
# df[["date"]]: gives value
# df$date: same as [["date"]]
# Get three rows
df[c(3, 6, 9), , drop = F]
df <- data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
df <- data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
df <- data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
install.packages("dataframes2xls")
df <- data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day")
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = ""))
quantity = round(runif(10) * 10000 ,0)
df <- data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
df <- data_frame
df <- data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
install.packages("tibble")
df <- data_frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
runApp('Shiny1')
runApp('Shiny1')
hist(rnom(100))
hist(rnorm(100))
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
runApp('Shiny1')
df[c(3, 6, 9), , drop = F]
df <- data.frame(
date = seq(as.Date("2017-01-01"), as.Date("2017-01-10"), by = "day"),
stock = replicate(10, paste0(sample(LETTERS, 3, replace = TRUE), collapse = "")),
quantity = round(runif(10) * 10000 ,0))
df[c(3, 6, 9), , drop = F]
bank <- read.csv("https://goo.gl/PBQnBt", sep = ";")
view(bank)
bank <- read.csv("https://goo.gl/PBQnBt", sep = ";")
View(bank)
bank$age
View(bank)
View(bank$age)
tail(bank)
shiny::runApp()
runApp()
runapp()
runApp()
shinyApp()
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
runApp('test1')
runApp('test1')
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
runApp('test1')
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
runApp('test1')
runApp('Desktop/Master/Trimester 2/Mini 3/Web Programming/Assignment1')
