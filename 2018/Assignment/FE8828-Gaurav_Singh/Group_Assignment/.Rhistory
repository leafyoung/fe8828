txnData<-data.frame("AccountNo"=character(),"Date"=character(),"TransactionType"=character())
for(k in 1:sampleSize)
{
startDate<-startDateOrig
endDate<-endDateOrig
start_month<-month(as.POSIXlt(startDate, format="%d-%m-%Y"))
end_month<-month(as.POSIXlt(endDate, format="%d-%m-%Y"))
for(monthLoop in start_month:end_month)
{
numberOfDeposits<-sample(1:2,1)
dateDeposit<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfDeposits), "TransactionType"="Deposit")
numberOfSW<-sample(0:60,1)
dateSW<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfSW,replace=TRUE),"TransactionType"=sample(c("Payment","Withdrawal"),numberOfSW,replace=TRUE))
df_temp<-rbind(dateDeposit,dateSW)
df_temp<-cbind("AccountNo"=rep(accountNums[k],nrow(df_temp)),df_temp[order(df_temp$Date),])
txnData<-rbind(txnData,df_temp)
}
}
txnData<-cbind(txnData,"Currency"=sample(c("SGD","USD","CNY"),nrow(txnData),replace=TRUE),"TransactionNo"=seq(txnNum,txnNum+nrow(txnData)-1,by=1),"Amount"=rep(0,nrow(txnData)))
txnData<-cbind(txnData[,c(5,2,1,3,6,4)],"DepositBalance"=rep(0,nrow(txnData)),"CreditBalance"=rep(0,nrow(txnData)))
txnData<-cbind(rbind(seedmoney,txnData),"EquivalentSGD"=rep(0,nrow(rbind(seedmoney,txnData))))
txnData$EquivalentSGD<-txnData$EquivalentSGD
txnData<-merge(txnData,df3,by=c("Date","Currency"))
txnData<- txnData[order(txnData$TransactionNo),]
txnNum<-txnNum+nrow(txnData)
txnData$DepositBalance<-rep(0,nrow(txnData))
for(k in 11:nrow(txnData))
{
if(txnData$TransactionType[k]=="Deposit")
{
txnData$Amount[k]<-sample(3000*txnData$Conversion[k]:5000*txnData$Conversion[k],1)/txnData$Conversion[k]/3000
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else if(txnData$TransactionType[k]=="Withdrawal")
{
txnData$Amount[k]<-(-1)*sample(0:df4[which(df4$AccountNo == txnData$AccountNo[k]),2]*txnData$Conversion[k],1)/txnData$Conversion[k]
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else
{
txnData$Amount[k]<-(-1)*sample(0:(df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+df4[which(df4$AccountNo == txnData$AccountNo[k]),3])*txnData$Conversion[k],1)/txnData$Conversion[k]
if(-1*txnData$Amount[k]>df4[which(df4$AccountNo == txnData$AccountNo[k]),3])
{
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]+df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
df4[which(df4$AccountNo == txnData$AccountNo[k]),3]<-0
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else
{
df4[which(df4$AccountNo == txnData$AccountNo[k]),3]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
}
}
txnData$Amount<-round(txnData$Amount*txnData$Conversion[k],2)
txnData$DepositBalance<-round(txnData$DepositBalance,2)
txnData$CreditBalance<-round(txnData$CreditBalance,2)
txnData<- txnData[order(txnData$TransactionNo),]
txnData <- txnData[txnData$Amount!=0, ]
View(txnData)
View(df4)
View(txnData)
#print(df1)
txnData2<-txnData[,c(1,4,3,5,6,2,7,8)]
txnData2
txnData2 %>% dplyr::filter(AccountNo==accountNums[1])
library(tidyverse)
library(readxl)
library(ggplot2)
library(lubridate)
library(data.table)
library(randomNames)
setwd("C:\\Users\\singh\\Desktop\\syllabus\\Mini 3\\FE8828 Programming Web Applications in Finance (E)\\Homework_Assignments\\FE8828-Gaurav_Singh\\Group_Assignment\\")
startDateOrig<-as.Date("2018-07-01")
endDateOrig<-as.Date("2018-09-30")
startDate<-startDateOrig-days(1)
endDate<-endDateOrig
#df1 Account num with names
names<-randomNames(10)
sampleSize<-10
accountNums<-sample(100000:100999,sampleSize,replace=FALSE)
df1<-data.frame("AccountNo"=accountNums,"Name"=names)
#----------------------------------
#df2 Transactions
df2 <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(df2) <- c("TransactionNo","Date","AccountNo","TransactionType","Amount","Currency")
#----------------------------------
#df3 Conversion Rate
SGDbyCNY <- read.csv(file="SGD_CNY Historical Data.csv", header=TRUE, sep=",")
colnames(SGDbyCNY)<- c("Date","Price","Open" ,"High","Low","Change")
SGDbyCNY$Date<-as.Date(SGDbyCNY$Date,format= "%B %d, %Y")
SGDbyCNY<-SGDbyCNY[,c(1,2)]
tempDateVec<-data.frame("Date"=seq(startDate, endDate, by="day"))
tempDateVec<-data.frame("Date"=anti_join(tempDateVec,data.frame("Date"=SGDbyCNY[,1])))
SGDbyCNY <-full_join(SGDbyCNY,tempDateVec,by="Date")
SGDbyCNY<- SGDbyCNY[order(SGDbyCNY$Date),]
SGDbyCNY<- cbind(SGDbyCNY,shift(SGDbyCNY$Price,1))
colnames(SGDbyCNY)<-c("Date","Price","Currency")
SGDbyCNY$Price[is.na(SGDbyCNY$Price)] <- SGDbyCNY$Currency[is.na(SGDbyCNY$Price)]
SGDbyCNY$Currency<-rep("CNY",endDate-startDate+1)
SGDbyUSD <- read.csv(file="SGD_USD Historical Data.csv", header=TRUE, sep=",")
colnames(SGDbyUSD)<- c("Date","Price","Open" ,"High","Low","Change")
SGDbyUSD$Date<-as.Date(SGDbyUSD$Date,format= "%B %d, %Y")
SGDbyUSD<-SGDbyUSD[,c(1,2)]
tempDateVec<-data.frame("Date"=seq(startDate, endDate, by="day"))
tempDateVec<-data.frame("Date"=anti_join(tempDateVec,data.frame("Date"=SGDbyUSD[,1])))
SGDbyUSD <-full_join(SGDbyUSD,tempDateVec,by="Date")
SGDbyUSD<- SGDbyUSD[order(SGDbyUSD$Date),]
SGDbyUSD<- cbind(SGDbyUSD,shift(SGDbyUSD$Price,1))
colnames(SGDbyUSD)<-c("Date","Price","Currency")
SGDbyUSD$Price[is.na(SGDbyUSD$Price)] <- SGDbyUSD$Currency[is.na(SGDbyUSD$Price)]
SGDbyUSD$Currency<-rep("USD",endDate-startDate+1)
SGDbySGD<-data.frame("Date"=seq(as.Date("2018-07-01"), as.Date("2018-09-30"), by="day"),"Price"=1,"Currency"="SGD")
df3 <- rbind(SGDbyCNY[,c(3,2,1)],SGDbyUSD[,c(3,2,1)],SGDbySGD[,c(3,2,1)])
colnames(df3)<-c("Currency","Conversion","Date")
#df3 <- mutate(df3,"EquivalentSGD")
#----------------------------------
#df4 Initial balances
df4 <- data.frame("AccountNo"=accountNums,"DepositBalance"=sample(15000:25000,sampleSize),"CreditBalance"=sample(5000:10000,sampleSize))
#----------------------------------
txnNum<-2018001
#ledger starts
seedmoney<-data.frame(cbind(df4),"Date"=rep(startDateOrig,sampleSize),"TransactionType"=rep("Deposit",sampleSize),"Currency"=rep("SGD",sampleSize),"TransactionNo"=seq(txnNum,txnNum+sampleSize-1,by=1),"Amount"=rep(0,sampleSize))
seedmoney<-seedmoney[,c(7,4,1,5,8,6,2,3)]
txnNum<-txnNum+sampleSize
ledger<-merge(data.frame("Month"),merge(merge(df2,df3,by=c("Date","Currency")),df4,by="AccountNo"))
colnames(ledger)[1]<-"Month"
colnames(ledger)[9]<-"EquivalentSGD"
txnData<-data.frame("AccountNo"=character(),"Date"=character(),"TransactionType"=character())
for(k in 1:sampleSize)
{
startDate<-startDateOrig
endDate<-endDateOrig
start_month<-month(as.POSIXlt(startDate, format="%d-%m-%Y"))
end_month<-month(as.POSIXlt(endDate, format="%d-%m-%Y"))
for(monthLoop in start_month:end_month)
{
numberOfDeposits<-sample(1:2,1)
dateDeposit<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfDeposits), "TransactionType"="Deposit")
numberOfSW<-sample(0:60,1)
dateSW<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfSW,replace=TRUE),"TransactionType"=sample(c("Payment","Withdrawal"),numberOfSW,replace=TRUE))
df_temp<-rbind(dateDeposit,dateSW)
df_temp<-cbind("AccountNo"=rep(accountNums[k],nrow(df_temp)),df_temp[order(df_temp$Date),])
txnData<-rbind(txnData,df_temp)
}
}
txnData<-cbind(txnData,"Currency"=sample(c("SGD","USD","CNY"),nrow(txnData),replace=TRUE),"TransactionNo"=seq(txnNum,txnNum+nrow(txnData)-1,by=1),"Amount"=rep(0,nrow(txnData)))
txnData<-cbind(txnData[,c(5,2,1,3,6,4)],"DepositBalance"=rep(0,nrow(txnData)),"CreditBalance"=rep(0,nrow(txnData)))
txnData<-cbind(rbind(seedmoney,txnData),"EquivalentSGD"=rep(0,nrow(rbind(seedmoney,txnData))))
txnData$EquivalentSGD<-txnData$EquivalentSGD
txnData<-merge(txnData,df3,by=c("Date","Currency"))
txnData<- txnData[order(txnData$TransactionNo),]
txnNum<-txnNum+nrow(txnData)
txnData$DepositBalance<-rep(0,nrow(txnData))
for(k in 11:nrow(txnData))
{
if(txnData$TransactionType[k]=="Deposit")
{
txnData$Amount[k]<-sample(3000*txnData$Conversion[k]:5000*txnData$Conversion[k],1)/txnData$Conversion[k]/3000
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else if(txnData$TransactionType[k]=="Withdrawal")
{
txnData$Amount[k]<-(-1)*sample(0:df4[which(df4$AccountNo == txnData$AccountNo[k]),2]*txnData$Conversion[k],1)/txnData$Conversion[k]
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else
{
txnData$Amount[k]<-(-1)*sample(0:(df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+df4[which(df4$AccountNo == txnData$AccountNo[k]),3])*txnData$Conversion[k],1)/txnData$Conversion[k]
if(-1*txnData$Amount[k]>df4[which(df4$AccountNo == txnData$AccountNo[k]),3])
{
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]+df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
df4[which(df4$AccountNo == txnData$AccountNo[k]),3]<-0
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else
{
df4[which(df4$AccountNo == txnData$AccountNo[k]),3]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
}
}
txnData$Amount<-round(txnData$Amount*txnData$Conversion[k],2)
txnData$DepositBalance<-round(txnData$DepositBalance,2)
txnData$CreditBalance<-round(txnData$CreditBalance,2)
txnData<- txnData[order(txnData$TransactionNo),]
txnData <- txnData[txnData$Amount!=0, ]
View(txnData)
View(dateDeposit)
View(dateSW)
for(k in 1:sampleSize)
{
startDate<-startDateOrig
endDate<-endDateOrig
start_month<-month(as.POSIXlt(startDate, format="%d-%m-%Y"))
end_month<-month(as.POSIXlt(endDate, format="%d-%m-%Y"))
for(monthLoop in start_month:end_month)
{
print("lalal")
numberOfDeposits<-sample(1:2,1)
dateDeposit<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfDeposits), "TransactionType"="Deposit")
numberOfSW<-sample(0:60,1)
dateSW<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfSW,replace=TRUE),"TransactionType"=sample(c("Payment","Withdrawal"),numberOfSW,replace=TRUE))
df_temp<-rbind(dateDeposit,dateSW)
df_temp<-cbind("AccountNo"=rep(accountNums[k],nrow(df_temp)),df_temp[order(df_temp$Date),])
txnData<-rbind(txnData,df_temp)
}
}
library(tidyverse)
library(readxl)
library(ggplot2)
library(lubridate)
library(data.table)
library(randomNames)
setwd("C:\\Users\\singh\\Desktop\\syllabus\\Mini 3\\FE8828 Programming Web Applications in Finance (E)\\Homework_Assignments\\FE8828-Gaurav_Singh\\Group_Assignment\\")
startDateOrig<-as.Date("2018-07-01")
endDateOrig<-as.Date("2018-09-30")
startDate<-startDateOrig-days(1)
endDate<-endDateOrig
#df1 Account num with names
names<-randomNames(10)
sampleSize<-10
accountNums<-sample(100000:100999,sampleSize,replace=FALSE)
df1<-data.frame("AccountNo"=accountNums,"Name"=names)
#----------------------------------
#df2 Transactions
df2 <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(df2) <- c("TransactionNo","Date","AccountNo","TransactionType","Amount","Currency")
#----------------------------------
#df3 Conversion Rate
SGDbyCNY <- read.csv(file="SGD_CNY Historical Data.csv", header=TRUE, sep=",")
colnames(SGDbyCNY)<- c("Date","Price","Open" ,"High","Low","Change")
SGDbyCNY$Date<-as.Date(SGDbyCNY$Date,format= "%B %d, %Y")
SGDbyCNY<-SGDbyCNY[,c(1,2)]
tempDateVec<-data.frame("Date"=seq(startDate, endDate, by="day"))
tempDateVec<-data.frame("Date"=anti_join(tempDateVec,data.frame("Date"=SGDbyCNY[,1])))
SGDbyCNY <-full_join(SGDbyCNY,tempDateVec,by="Date")
SGDbyCNY<- SGDbyCNY[order(SGDbyCNY$Date),]
SGDbyCNY<- cbind(SGDbyCNY,shift(SGDbyCNY$Price,1))
colnames(SGDbyCNY)<-c("Date","Price","Currency")
SGDbyCNY$Price[is.na(SGDbyCNY$Price)] <- SGDbyCNY$Currency[is.na(SGDbyCNY$Price)]
SGDbyCNY$Currency<-rep("CNY",endDate-startDate+1)
SGDbyUSD <- read.csv(file="SGD_USD Historical Data.csv", header=TRUE, sep=",")
colnames(SGDbyUSD)<- c("Date","Price","Open" ,"High","Low","Change")
SGDbyUSD$Date<-as.Date(SGDbyUSD$Date,format= "%B %d, %Y")
SGDbyUSD<-SGDbyUSD[,c(1,2)]
tempDateVec<-data.frame("Date"=seq(startDate, endDate, by="day"))
tempDateVec<-data.frame("Date"=anti_join(tempDateVec,data.frame("Date"=SGDbyUSD[,1])))
SGDbyUSD <-full_join(SGDbyUSD,tempDateVec,by="Date")
SGDbyUSD<- SGDbyUSD[order(SGDbyUSD$Date),]
SGDbyUSD<- cbind(SGDbyUSD,shift(SGDbyUSD$Price,1))
colnames(SGDbyUSD)<-c("Date","Price","Currency")
SGDbyUSD$Price[is.na(SGDbyUSD$Price)] <- SGDbyUSD$Currency[is.na(SGDbyUSD$Price)]
SGDbyUSD$Currency<-rep("USD",endDate-startDate+1)
SGDbySGD<-data.frame("Date"=seq(as.Date("2018-07-01"), as.Date("2018-09-30"), by="day"),"Price"=1,"Currency"="SGD")
df3 <- rbind(SGDbyCNY[,c(3,2,1)],SGDbyUSD[,c(3,2,1)],SGDbySGD[,c(3,2,1)])
colnames(df3)<-c("Currency","Conversion","Date")
#df3 <- mutate(df3,"EquivalentSGD")
#----------------------------------
#df4 Initial balances
df4 <- data.frame("AccountNo"=accountNums,"DepositBalance"=sample(15000:25000,sampleSize),"CreditBalance"=sample(5000:10000,sampleSize))
#----------------------------------
txnNum<-2018001
#ledger starts
seedmoney<-data.frame(cbind(df4),"Date"=rep(startDateOrig,sampleSize),"TransactionType"=rep("Deposit",sampleSize),"Currency"=rep("SGD",sampleSize),"TransactionNo"=seq(txnNum,txnNum+sampleSize-1,by=1),"Amount"=rep(0,sampleSize))
seedmoney<-seedmoney[,c(7,4,1,5,8,6,2,3)]
txnNum<-txnNum+sampleSize
ledger<-merge(data.frame("Month"),merge(merge(df2,df3,by=c("Date","Currency")),df4,by="AccountNo"))
colnames(ledger)[1]<-"Month"
colnames(ledger)[9]<-"EquivalentSGD"
txnData<-data.frame("AccountNo"=character(),"Date"=character(),"TransactionType"=character())
for(k in 1:sampleSize)
{
startDate<-startDateOrig
endDate<-endDateOrig
start_month<-month(as.POSIXlt(startDate, format="%d-%m-%Y"))
end_month<-month(as.POSIXlt(endDate, format="%d-%m-%Y"))
for(monthLoop in start_month:end_month)
{
print("lalal")
numberOfDeposits<-sample(1:2,1)
dateDeposit<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfDeposits), "TransactionType"="Deposit")
numberOfSW<-sample(0:60,1)
dateSW<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfSW,replace=TRUE),"TransactionType"=sample(c("Payment","Withdrawal"),numberOfSW,replace=TRUE))
df_temp<-rbind(dateDeposit,dateSW)
df_temp<-cbind("AccountNo"=rep(accountNums[k],nrow(df_temp)),df_temp[order(df_temp$Date),])
txnData<-rbind(txnData,df_temp)
}
}
txnData<-cbind(txnData,"Currency"=sample(c("SGD","USD","CNY"),nrow(txnData),replace=TRUE),"TransactionNo"=seq(txnNum,txnNum+nrow(txnData)-1,by=1),"Amount"=rep(0,nrow(txnData)))
txnData<-cbind(txnData[,c(5,2,1,3,6,4)],"DepositBalance"=rep(0,nrow(txnData)),"CreditBalance"=rep(0,nrow(txnData)))
txnData<-cbind(rbind(seedmoney,txnData),"EquivalentSGD"=rep(0,nrow(rbind(seedmoney,txnData))))
txnData$EquivalentSGD<-txnData$EquivalentSGD
txnData<-merge(txnData,df3,by=c("Date","Currency"))
txnData<- txnData[order(txnData$TransactionNo),]
txnNum<-txnNum+nrow(txnData)
txnData$DepositBalance<-rep(0,nrow(txnData))
for(k in 11:nrow(txnData))
{
if(txnData$TransactionType[k]=="Deposit")
{
txnData$Amount[k]<-sample(3000*txnData$Conversion[k]:5000*txnData$Conversion[k],1)/txnData$Conversion[k]/3000
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else if(txnData$TransactionType[k]=="Withdrawal")
{
txnData$Amount[k]<-(-1)*sample(0:df4[which(df4$AccountNo == txnData$AccountNo[k]),2]*txnData$Conversion[k],1)/txnData$Conversion[k]
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else
{
txnData$Amount[k]<-(-1)*sample(0:(df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+df4[which(df4$AccountNo == txnData$AccountNo[k]),3])*txnData$Conversion[k],1)/txnData$Conversion[k]
if(-1*txnData$Amount[k]>df4[which(df4$AccountNo == txnData$AccountNo[k]),3])
{
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]+df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
df4[which(df4$AccountNo == txnData$AccountNo[k]),3]<-0
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else
{
df4[which(df4$AccountNo == txnData$AccountNo[k]),3]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
}
}
txnData$Amount<-round(txnData$Amount*txnData$Conversion[k],2)
txnData$DepositBalance<-round(txnData$DepositBalance,2)
txnData$CreditBalance<-round(txnData$CreditBalance,2)
txnData<- txnData[order(txnData$TransactionNo),]
txnData <- txnData[txnData$Amount!=0, ]
View(df_temp)
View(df_temp)
startDate
startDate+months(1)
library(tidyverse)
library(readxl)
library(ggplot2)
library(lubridate)
library(data.table)
library(randomNames)
setwd("C:\\Users\\singh\\Desktop\\syllabus\\Mini 3\\FE8828 Programming Web Applications in Finance (E)\\Homework_Assignments\\FE8828-Gaurav_Singh\\Group_Assignment\\")
startDateOrig<-as.Date("2018-07-01")
endDateOrig<-as.Date("2018-09-30")
startDate<-startDateOrig-days(1)
endDate<-endDateOrig
#df1 Account num with names
names<-randomNames(10)
sampleSize<-10
accountNums<-sample(100000:100999,sampleSize,replace=FALSE)
df1<-data.frame("AccountNo"=accountNums,"Name"=names)
#----------------------------------
#df2 Transactions
df2 <- data.frame(matrix(ncol = 6, nrow = 0))
colnames(df2) <- c("TransactionNo","Date","AccountNo","TransactionType","Amount","Currency")
#----------------------------------
#df3 Conversion Rate
SGDbyCNY <- read.csv(file="SGD_CNY Historical Data.csv", header=TRUE, sep=",")
colnames(SGDbyCNY)<- c("Date","Price","Open" ,"High","Low","Change")
SGDbyCNY$Date<-as.Date(SGDbyCNY$Date,format= "%B %d, %Y")
SGDbyCNY<-SGDbyCNY[,c(1,2)]
tempDateVec<-data.frame("Date"=seq(startDate, endDate, by="day"))
tempDateVec<-data.frame("Date"=anti_join(tempDateVec,data.frame("Date"=SGDbyCNY[,1])))
SGDbyCNY <-full_join(SGDbyCNY,tempDateVec,by="Date")
SGDbyCNY<- SGDbyCNY[order(SGDbyCNY$Date),]
SGDbyCNY<- cbind(SGDbyCNY,shift(SGDbyCNY$Price,1))
colnames(SGDbyCNY)<-c("Date","Price","Currency")
SGDbyCNY$Price[is.na(SGDbyCNY$Price)] <- SGDbyCNY$Currency[is.na(SGDbyCNY$Price)]
SGDbyCNY$Currency<-rep("CNY",endDate-startDate+1)
SGDbyUSD <- read.csv(file="SGD_USD Historical Data.csv", header=TRUE, sep=",")
colnames(SGDbyUSD)<- c("Date","Price","Open" ,"High","Low","Change")
SGDbyUSD$Date<-as.Date(SGDbyUSD$Date,format= "%B %d, %Y")
SGDbyUSD<-SGDbyUSD[,c(1,2)]
tempDateVec<-data.frame("Date"=seq(startDate, endDate, by="day"))
tempDateVec<-data.frame("Date"=anti_join(tempDateVec,data.frame("Date"=SGDbyUSD[,1])))
SGDbyUSD <-full_join(SGDbyUSD,tempDateVec,by="Date")
SGDbyUSD<- SGDbyUSD[order(SGDbyUSD$Date),]
SGDbyUSD<- cbind(SGDbyUSD,shift(SGDbyUSD$Price,1))
colnames(SGDbyUSD)<-c("Date","Price","Currency")
SGDbyUSD$Price[is.na(SGDbyUSD$Price)] <- SGDbyUSD$Currency[is.na(SGDbyUSD$Price)]
SGDbyUSD$Currency<-rep("USD",endDate-startDate+1)
SGDbySGD<-data.frame("Date"=seq(as.Date("2018-07-01"), as.Date("2018-09-30"), by="day"),"Price"=1,"Currency"="SGD")
df3 <- rbind(SGDbyCNY[,c(3,2,1)],SGDbyUSD[,c(3,2,1)],SGDbySGD[,c(3,2,1)])
colnames(df3)<-c("Currency","Conversion","Date")
#df3 <- mutate(df3,"EquivalentSGD")
#----------------------------------
#df4 Initial balances
df4 <- data.frame("AccountNo"=accountNums,"DepositBalance"=sample(15000:25000,sampleSize),"CreditBalance"=sample(5000:10000,sampleSize))
#----------------------------------
txnNum<-2018001
#ledger starts
seedmoney<-data.frame(cbind(df4),"Date"=rep(startDateOrig,sampleSize),"TransactionType"=rep("Deposit",sampleSize),"Currency"=rep("SGD",sampleSize),"TransactionNo"=seq(txnNum,txnNum+sampleSize-1,by=1),"Amount"=rep(0,sampleSize))
seedmoney<-seedmoney[,c(7,4,1,5,8,6,2,3)]
txnNum<-txnNum+sampleSize
ledger<-merge(data.frame("Month"),merge(merge(df2,df3,by=c("Date","Currency")),df4,by="AccountNo"))
colnames(ledger)[1]<-"Month"
colnames(ledger)[9]<-"EquivalentSGD"
txnData<-data.frame("AccountNo"=character(),"Date"=character(),"TransactionType"=character())
for(k in 1:sampleSize)
{
startDate<-startDateOrig
endDate<-endDateOrig
start_month<-month(as.POSIXlt(startDate, format="%d-%m-%Y"))
end_month<-month(as.POSIXlt(endDate, format="%d-%m-%Y"))
for(monthLoop in start_month:end_month)
{
numberOfDeposits<-sample(1:2,1)
dateDeposit<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfDeposits), "TransactionType"="Deposit")
numberOfSW<-sample(0:60,1)
dateSW<-data.frame("Date"=sample(seq(startDate, startDate+months(1)-days(1), by="day"), numberOfSW,replace=TRUE),"TransactionType"=sample(c("Payment","Withdrawal"),numberOfSW,replace=TRUE))
df_temp<-rbind(dateDeposit,dateSW)
df_temp<-cbind("AccountNo"=rep(accountNums[k],nrow(df_temp)),df_temp[order(df_temp$Date),])
txnData<-rbind(txnData,df_temp)
startDate<-startDate+months(1)
}
}
txnData<-cbind(txnData,"Currency"=sample(c("SGD","USD","CNY"),nrow(txnData),replace=TRUE),"TransactionNo"=seq(txnNum,txnNum+nrow(txnData)-1,by=1),"Amount"=rep(0,nrow(txnData)))
txnData<-cbind(txnData[,c(5,2,1,3,6,4)],"DepositBalance"=rep(0,nrow(txnData)),"CreditBalance"=rep(0,nrow(txnData)))
txnData<-cbind(rbind(seedmoney,txnData),"EquivalentSGD"=rep(0,nrow(rbind(seedmoney,txnData))))
txnData$EquivalentSGD<-txnData$EquivalentSGD
txnData<-merge(txnData,df3,by=c("Date","Currency"))
txnData<- txnData[order(txnData$TransactionNo),]
txnNum<-txnNum+nrow(txnData)
txnData$DepositBalance<-rep(0,nrow(txnData))
for(k in 11:nrow(txnData))
{
if(txnData$TransactionType[k]=="Deposit")
{
txnData$Amount[k]<-sample(3000*txnData$Conversion[k]:5000*txnData$Conversion[k],1)/txnData$Conversion[k]/3000
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else if(txnData$TransactionType[k]=="Withdrawal")
{
txnData$Amount[k]<-(-1)*sample(0:df4[which(df4$AccountNo == txnData$AccountNo[k]),2]*txnData$Conversion[k],1)/txnData$Conversion[k]
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else
{
txnData$Amount[k]<-(-1)*sample(0:(df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+df4[which(df4$AccountNo == txnData$AccountNo[k]),3])*txnData$Conversion[k],1)/txnData$Conversion[k]
if(-1*txnData$Amount[k]>df4[which(df4$AccountNo == txnData$AccountNo[k]),3])
{
df4[which(df4$AccountNo == txnData$AccountNo[k]),2]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]+txnData$Amount[k]+df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
df4[which(df4$AccountNo == txnData$AccountNo[k]),3]<-0
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
else
{
df4[which(df4$AccountNo == txnData$AccountNo[k]),3]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]+txnData$Amount[k]
txnData$DepositBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),2]
txnData$CreditBalance[k]<-df4[which(df4$AccountNo == txnData$AccountNo[k]),3]
}
}
}
txnData$Amount<-round(txnData$Amount*txnData$Conversion[k],2)
txnData$DepositBalance<-round(txnData$DepositBalance,2)
txnData$CreditBalance<-round(txnData$CreditBalance,2)
txnData<- txnData[order(txnData$TransactionNo),]
txnData <- txnData[txnData$Amount!=0, ]
View(txnData)
View(txnData)
#print(df1)
txnData2<-txnData[,c(1,4,3,5,6,2,7,8)]
for(i in 1:sampleSize)
{
for(j in month(startDateOrig):month(endDateOrig))
{
paste(cat("Client Name : ",as.character(df1$Name[[which(df1$AccountNo == accountNums[i])]]),"\n"))
paste(cat("Month : ",month.abb[j],"\n"))
kable(txnData)
}
}
adf<-data.frame(c(0:2),c(2:4))
#print(df1)
txnData2<-txnData[,c(1,4,3,5,6,2,7,8)]
for(i in 1:sampleSize)
{
for(j in month(startDateOrig):month(endDateOrig))
{
paste(cat("Client Name : ",as.character(df1$Name[[which(df1$AccountNo == accountNums[i])]]),"\n"))
paste(cat("Month : ",month.abb[j],"\n"))
adf<-data.frame(c(0:2),c(2:4))
kable(adf)
}
}
View(txnData2)
View(df4)
View(df1)
txnData2 %>% dplyr::filter((month(Date)==j)&AccountNo==accountNums[i])
select(txnData2 %>% dplyr::filter((month(Date)==j)&AccountNo==accountNums[i]),2)
select(txnData2 %>% dplyr::filter((month(Date)==j)&AccountNo==accountNums[i])),c(1,4,5,6,7,8)
