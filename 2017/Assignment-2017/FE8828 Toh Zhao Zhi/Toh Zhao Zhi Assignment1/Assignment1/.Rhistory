runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
shiny::runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
shiny::runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('C:/Users/tohzh/Downloads/Toh+Jia+Yuan_R+Assignment+1.R')
runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('C:/Users/tohzh/Downloads/Toh+Jia+Yuan_R+Assignment+1.R')
runApp('MFE/MT3/Programming Web Applications in Finance/Assignment1')
runApp('C:/Users/tohzh/Downloads/Toh+Jia+Yuan_R+Assignment+1.R')
runApp('C:/Users/tohzh/Downloads/Toh+Jia+Yuan_R+Assignment+1.R')
setwd("~/MFE/MT3/Programming Web Applications in Finance/Assignment1")
runApp()
runApp('C:/Users/tohzh/Downloads/Toh+Jia+Yuan_R+Assignment+1.R')
runApp('C:/Users/tohzh/Downloads/Toh+Jia+Yuan_R+Assignment+1.R')
install.packages("bizdays")
install.packages("tidyverse")
runApp()
install.packages("fOptions")
runApp()
runApp()
runApp()
m = matrix(sample(1:9,replace = F),3,3)
m = matrix(sample(1:9,replace = F),3,3)
m
m = matrix(sample(1:9,replace = F),3,3)
m[1,]
m = matrix(sample(1:9,replace = F),3,3)
m
m = matrix(sample(1:9,replace = F),3,3)
m[1,]
m = matrix(sample(1:9,replace = F),3,3)
m
t = max(m[1,])
t
t = max(m[1,],2)
t
t = max(m[1,])
tloc = match(t == m[1,])
t = max(m[1,])
tloc = match(t, m[1,])
tloc
t = max(m[1,])
##Get location of t in row
tloc = match(t, m[1,])
m[1,tloc] = m[1,1]
m[1,1] = t
m
t = max(m[2,])
##Get location of t in row
tloc = match(t, m[2,])
m[1,tloc] = m[2,1]
m[2,1] = t
m
t = max(m[2,])
##Get location of t in row
tloc = match(t, m[2,])
m[2,tloc] = m[2,1]
m[2,1] = t
m
m = matrix(sample(1:9,replace = F),3,3)
m
t = max(m[2,])
##Get location of t in row
tloc = match(t, m[2,])
m[2,tloc] = m[2,1]
m[2,1] = t
m
match(c(11,31),c(11,11,31,10,31))
sample(1:10,10,replace = F)
sample(c(T,F),10,replace = T)
sample(1:6,10,replace = T)
x = c(Sys.Date(), Sys.Date(), Sys.Date())
cat(paste0("Current dates is ", x, ".\n"))
x = c(Sys.Date(), Sys.Date(), Sys.Date())
cat(paste0("Current dates is ", x, ".\n"))
cat(paste0("Current dates is ", paste0(x,collapse = ", ", ".\n"))
x = c(Sys.Date(), Sys.Date(), Sys.Date())
cat(paste0("Current dates is ", x, ".\n"))
cat(paste0("Current dates is ", paste0(x,collapse = ", "), ".\n"))
x = c(Sys.Date(), Sys.Date(), Sys.Date())
cat(paste0("Current dates is ", x, ".\n"))
cat(paste0("Current dates is ", paste0(x,collapse = ", "), ".\n"))
paste0(1:3, sep = "a")
mon = "january"
mon = toupper(mon)
mon = "january"
mon = toupper(mon)
mon
mon = "january"
mon[1] = toupper(mon[1])
mon
mon = "january"
substr(mon[1]) = toupper(mon[1])
mon = "january"
substr(mon,1,1) = toupper(substr(mon,1,1))
mon
grep("A","ABC",fixed = T)
? grepl
#Rough cut
sub("([^\\_]+)\\_.*","\\1","USDCNY_M1")
#Rough cut
sub("([^\\_]+)\\_.*","\\1","USDCNY_M1")
sub("([^\\_]+)\\_(.*)","\\1 \\2","USDCNY_M1")
#Rough cut
sub("([^\\_]+)\\_.*","\\1","USDCNY_M1")
sub("([^\\_]+)\\_(.*)","\\1 \\2","USDCNY_M1")
sub("([^\\_]+)\\_([[:alpha:]])([[:digit:]])","\\1 \\2 \\3","USDCNY_M1")
ymd((20171003))
ymd(20171003)
library(tidyverse)
library(fOptim)
library("fOptim")
library(lubridate)
library(lubridate)
ymd(20171003)
#Rough cut
sub("([^\\_]+)\\_.*","\\1","USDCNY_M1")
sub("([^\\_]+)\\_(.*)","\\1 \\2","USDCNY_M1")
sub("([^\\_]+)\\_([[:alpha:]])([[:digit:]])","\\1 \\2","USDCNY_M1")
#Rough cut
sub("([^\\_]+)\\_.*","\\1","USDCNY_M1")
sub("([^\\_]+)\\_(.*)","\\1 \\2","USDCNY_M1")
sub("([^\\_]+)\\_([[:alpha:]])([[:digit:]])","\\1 \\2 \\3","USDCNY_M1")
runApp('C:/Users/tohzh/Downloads/ass1_2.R')
library(lubridate)
ymd(20171003)
format(Sys.Date,format = "5y/%m/%d")
library(lubridate)
ymd(20171003)
format(Sys.Date,format = "5Y/%m/%d")
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "5Y/%m/%d")
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("2018/11/09")
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017")
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/5Y")
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y")
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y") ##Use format to read dates in different formats
as.Date("08Jan2016",format = "%d%b%Y")
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y") ##Use format to read dates in different formats
x = as.Date("08Jan2016",format = "%d%b%Y")
month(x)
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y") ##Use format to read dates in different formats
x = as.Date("08Jan2016",format = "%d%b%Y")
month(x) =2
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y") ##Use format to read dates in different formats
x = as.Date("08Jan2016",format = "%d%b%Y")
month(x) =2
x
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y") ##Use format to read dates in different formats
x = as.Date("08Jan2016",format = "%d%b%Y")
month(x) =2
x
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y") ##Use format to read dates in different formats
x = as.Date("08Jan2016",format = "%d%b%Y")
month(x) =2
x
is.leapyear <- function(y)
{
d<-ymd(paste0(y,"0201"))
day(d)=days_in_month(d)
day(d) == 29
}
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y") ##Use format to read dates in different formats
x = as.Date("08Jan2016",format = "%d%b%Y")
month(x) =2
x
is.leapyear <- function(y)
{
d<-ymd(paste0(y,"0201"))
day(d)=days_in_month(d)
day(d) == 29
}
is.leapyear(2017)
library(lubridate)
ymd(20171003)
format(Sys.Date(),format = "%Y/%m/%d")
as.Date("20/11/2017", format = "%d/%m/%Y") ##Use format to read dates in different formats
x = as.Date("08Jan2016",format = "%d%b%Y")
month(x) =2
x
is.leapyear <- function(y)
{
d<-ymd(paste0(y,"0201"))
day(d)=days_in_month(d)
day(d) == 29
}
is.leapyear(2012)
libarary(bizdays)
library(bizdays)
library(bizdays)
bizdays("2017-10-16","2017-10-30","weekends")
library(bizdays)
bizdays("2017-10-16","2017-10-30","weekends") ##Skip first day; weekends is a calendar of weekdays
add.bizdays("2017-11-03",5,"weekends")
library(bizdays)
bizdays("2017-10-16","2017-10-30","weekends") ##Skip first day; weekends is a calendar of weekdays
add.bizdays("2017-11-03",5,"weekends")
bizseq("2017-11-10","2017-12-01","weekends")
printMonths = function(type){
d<- ymd("20170101")
if(type == "Full"){
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B"))))
}
}
else{
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B"))))
}
}
}
printMonths = function(type){
d<- ymd("20170101")
if(type == "Full"){
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B"))))
}
}
else{
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B"))))
}
}
}
printMonths("Full")
printMonths = function(type){
d<- ymd("20170101")
if(type == "Full"){
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B")),'\n'))
}
}
else{
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B")),'\n'))
}
}
}
printMonths("Full")
printMonths = function(type){
d<- ymd("20170101")
if(type == "Full"){
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B")),'\n'))
}
}
else{
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B")),'\n'))
}
}
}
printMonths("Full")
printMonths("Abbrev")
printMonths = function(type){
d<- ymd("20170101")
if(type == "Full"){
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%B")),'\n'))
}
}
else{
for(dd in 1:12){
month(d) <- dd
cat(paste0(format(format(d,format="%b")),'\n'))
}
}
}
printMonths("Full")
printMonths("Abbrev")
a = list(3,4)
a = list(3,4)
a
a = list(3,4)
a$c
basket = sample(c("Apple","Orange","Pear"),100,replace = T)
fruit_count = list()
basket = sample(c("Apple","Orange","Pear"),100,replace = T)
fruit_count = list()
for(b in basket){
if(is.null(basket$b))
fruit_count$b = 1;
else
basket = sample(c("Apple","Orange","Pear"),100,replace = T)
fruit_count = list()
for(b in basket){
if(is.null(basket$b))
fruit_count[[b]] = 1;
else
basket = sample(c("Apple","Orange","Pear"),100,replace = T)
fruit_count = list()
for(b in basket){
if(is.null(basket$b)){
fruit_count[[b]] = 1
}
else
fruit_count[[b]] = fruit_count[[b]] +1
}
basket = sample(c("Apple","Orange","Pear"),100,replace = T)
fruit_count = list()
for(b in basket){
if(is.null(basket[[b]])){
fruit_count[[b]] = 1
}
else
fruit_count[[b]] = fruit_count[[b]] +1
}
basket = sample(c("Apple","Orange","Pear"),100,replace = T)
fruit_count = list()
for(b in basket){
if(is.null(fruit_count[[b]])){
fruit_count[[b]] = 1
}
else
fruit_count[[b]] = fruit_count[[b]] +1
}
basket = sample(c("Apple","Orange","Pear"),100,replace = T)
fruit_count = list()
for(b in basket){
if(is.null(fruit_count[[b]])){
fruit_count[[b]] = 1
}
else
fruit_count[[b]] = fruit_count[[b]] +1
}
fruit_count
res1 = purrr::map(1:10,function(x) rnorm(x,n = 10))
res1 = purrr::map(1:10,function(x) rnorm(x,n = 10))
plot((x = res1))
res1 = purrr::map(1:10,function(x) rnorm(x,n = 10))
plot((x = res1,y = 1:100))
res1 = purrr::map(1:10,function(x) rnorm(x,n = 10))
plot(x = res1,y = 1:100)
res1 = purrr::map(1:10,function(x) rnorm(x,n = 10))
FishCount <- function(v){
fastest = v[1]
for(i in 1:10){
if(v[i] < fastest){
fastest = v[i]
}
else{
v[i] = NA
}
}
length(na.omit(v))
}
for(i in 1:100000){
seq = sample(1:10,10,replace = F)
FishCount(seq)
}
FishCount <- function(v){
fastest = v[1]
for(i in 1:10){
if(v[i] < fastest){
fastest = v[i]
}
else{
v[i] = NA
}
}
length(na.omit(v))
}
sum = 0
for(i in 1:100000){
seq = sample(1:10,10,replace = F)
sum = sum + FishCount(seq)
}
sum/100000
FishCount <- function(v){
fastest = v[1]
for(i in 1:10){
if(v[i] < fastest){
fastest = v[i]
}
else{
v[i] = NA
}
}
length(na.omit(v))
}
sum = 0
for(i in 1:100000){
seq = sample(1:10,10,replace = F)
sum = sum + FishCount(seq)
}
sum/100000
1+0.5+1/3+1/4+1/5+1/6+1/7+1/8+1/9+1/10
i
FishCount <- function(v){
fastest = v[1]
for(i in 2:10){
if(v[i] < fastest){
fastest = v[i]
}
else{
v[i] = NA
}
}
length(na.omit(v))
}
sum = 0
for(i in 1:100000){
seq = sample(1:10,10,replace = F)
sum = sum + FishCount(seq)
}
sum/100000
FishCount <- function(v){
fastest = v[1]
for(i in 1:10){
if(v[i] <= fastest){
fastest = v[i]
}
else{
v[i] = NA
}
}
length(na.omit(v))
}
sum = 0
for(i in 1:100000){
seq = sample(1:10,10,replace = F)
sum = sum + FishCount(seq)
}
sum/100000
FishCount <- function(v){
fastest = v[1]
for(i in 1:10){
if(v[i] <= fastest){
fastest = v[i]
}
else{
v[i] = NA
}
}
length(na.omit(v))
}
sum = 0
for(i in 1:100000){
seq = sample(1:10,10,replace = F)
sum = sum + FishCount(seq)
}
sum/100000
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
