ggplot(bank, aes(job, age)) +
geom_point() +
theme(axis.text.x = element_text(angle=90, hjust=1))
group_by(bank, job) %>%
summarise(count = n(),
balance_mean = mean(balance),
default_count = sum(ifelse(default == "no", 0, 1)),
subscription_count = sum(ifelse(y == "no", 0, 1)),
"default_rate(%)" = round(default_count/count*100,2),
"subscription_rate(%)" = round(subscription_count/count*100,2)) %>%
arrange(job) -> res
res
ggplot(res, aes(job, count, fill=job))  +
geom_bar(stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(res, aes(job, balance_mean, fill=job))  +
geom_bar(stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle=90, hjust=1))
group_by(bank, education,job) %>%
summarise(count = n(),
balance_mean = mean(balance),
balance_sum = sum(balance),
default_count = sum(ifelse(default == "no", 0, 1)),
subscription_count = sum(ifelse(y == "no", 0, 1)),
"default_rate(%)" = default_count/count*100,
"subscription_rate(%)" = subscription_count/count*100) %>%
arrange(education) -> res
res
group_by(bank, housing) %>%
summarise(count = n(),
balance_mean = mean(balance),
age_mean = mean(age),
default_count = sum(ifelse(default == "no", 0, 1)),
subscription_count = sum(ifelse(y == "no", 0, 1)),
"default_rate(%)" = default_count/count*100,
"subscription_rate(%)" = subscription_count/count*100) %>%
arrange(housing) -> res
res
ggplot(bank, aes(contact, duration)) +
geom_point() +
theme(axis.text.x = element_text(angle=90, hjust=1))
group_by(bank, contact) %>%
summarise(count = n(),
balance_mean = mean(balance),
duration_mean = mean(duration),
default_count = sum(ifelse(default == "no", 0, 1)),
subscription_count = sum(ifelse(y == "no", 0, 1)),
"default_rate(%)" = default_count/count*100,
"subscription_rate(%)" = subscription_count/count*100) %>%
arrange(contact) -> res
res
bank %>%
group_by(month,y) %>%
summarise(count = n()) %>%
arrange(month) -> res
res
ggplot(res, aes(month, count, fill=y)) +
geom_bar(stat = 'identity', position = 'dodge')
group_by(bank, month) %>%
summarise(count = n(),
subscription_count = sum(ifelse(y == "no", 0, 1)),
"subscription_rate(%)" = round(subscription_count/count*100,2)) %>%
arrange(month) -> res
res
ggplot(res, aes(month, count))  +
geom_bar(stat = 'identity', position = 'dodge') +
theme(axis.text.x = element_text(angle=90, hjust=1))
library(knitr)
library(tidyverse)
library(lubridate)
library(bizdays)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, fig.align="center", collapse = TRUE, cache = TRUE)
# bank <- read.csv("https://goo.gl/PBQnBt", sep = ";")
# balance for each person
ggplot(bank, aes(age, balance)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE)
# mean balance for each age number
group_by(bank, age) %>%
summarise(balance_mean = mean(balance))%>%
arrange(age) -> res
ggplot(res, aes(age, balance_mean)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE)
# balance for each person
ggplot(bank, aes(job, age)) +
geom_point() +
theme(text = element_text(size=8),
axis.text.x = element_text(angle=90, hjust=1))
# mean balance for each job
group_by(bank, job) %>%
summarise(balance_mean = mean(balance))%>%
arrange(job) -> res
ggplot(res, aes(job, balance_mean)) +
geom_bar(stat = 'identity', position = 'dodge') +
theme(text = element_text(size=8),
axis.text.x = element_text(angle=90, hjust=1))
ggplot(bank, aes(x = age, y = duration, color = education)) +
geom_point() +
theme(legend.position="left", text = element_text(size=8))
group_by(bank, duration) %>%
summarise(count = n(),
subscription_count = sum(ifelse(y == "no", 0, 1)),
subscription_rate = subscription_count/count*100) %>%
arrange(duration) -> res
res
ggplot(res, aes(duration, subscription_rate)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE)
ggplot(bank) +
geom_point(aes(age, duration, alpha = balance))
# Find the balance groups
ggplot(data = bank, mapping = aes(x = job, fill = education)) +
geom_bar() +
coord_flip()
library(conflicted)
library(tidyverse)
library(lubridate)
library(bizdays)
conflict_prefer("lag","dplyr")
conflict_prefer("filter","dplyr")
# Use echo = TRUE for assignment is an exception, so code is visible.
knitr::opts_chunk$set(echo = TRUE, fig.align="center", collapse = TRUE, cache = TRUE)
# bank <- read.csv("https://goo.gl/PBQnBt", sep = ";")
bank %>%
summarise('balance_mean' = mean(balance),
'balance_median' = median(balance),
'balance_max' = max(balance),
'balance_min' = min(balance))
bank %>%
group_by(age_group = (age %/% 10) * 10) %>%
summarise(count = n()) %>%
arrange(age_group) -> res
res
plot(res$age_group, res$count)
bank %>%
group_by(job) %>%
summarise(balance_mean = mean(balance),
count=n(),
default_count = sum(default=='yes'))
bank %>%
group_by(job) %>%
filter(min_rank(balance) <= 3 | min_rank(desc(balance)) <= 3) %>%
arrange(job, balance)
bank %>%
group_by(marital) %>%
summarise(`balance > 1000` = sum(balance > 1000)) -> d1
bank %>%
group_by(marital) %>%
summarise(`balance <= 1000` = sum(balance <= 1000)) -> d2
df <- distinct(bank, marital) %>% arrange(marital)
df <- left_join(df, d1, by = "marital")
df <- left_join(df, d2, by = "marital")
df <- mutate(df, total = `balance > 1000` + `balance <= 1000`)
df
bank %>%
group_by(job, education) %>%
summarise('defaults_per_group' = sum(default == 'yes')) %>%
arrange(desc(defaults_per_group))
bank %>%
group_by(housing) %>%
summarise(balance_mean = mean(balance),
count=n(),
default_count = sum(default=='yes'))
bank %>%
group_by(loan) %>%
summarise(balance_mean = mean(balance),
count=n(),
default_count = sum(default=='yes'))
bank %>%
group_by(education) %>%
summarise(balance_mean = mean(balance),
count=n(),
default_count = sum(default=='yes'))
library(conflicted)
library(tidyverse)
library(lubridate)
library(bizdays)
library(ggplot2)
library(cowplot)
conflict_prefer("lag","dplyr")
conflict_prefer("filter","dplyr")
# Use echo = TRUE for assignment is an exception, so code is visible.
knitr::opts_chunk$set(echo = TRUE, fig.align="center", collapse = TRUE, cache = TRUE)
# bank <- read.csv("https://goo.gl/PBQnBt", sep = ";")
bank %>%
ggplot(aes(x = balance)) + geom_density()
bank %>%
ggplot(aes(x=age, y=..density..)) +
geom_histogram(binwidth = 1, color="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")
bank %>%
ggplot(aes(x=age, y=..density.., color=marital)) +
geom_freqpoly(binwidth=10)
bank %>%
ggplot() +
geom_bar(aes(x=age,fill=education), position = 'fill') +
coord_polar() +
theme_minimal()
bank %>%
ggplot(aes(x=job, y=balance, color=job)) +
geom_boxplot(show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
point <- ggplot(bank, aes(x=age,y=balance)) + geom_point()
d1 <- ggplot(bank, aes(x=age)) + geom_density() + theme(
axis.title.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.x=element_blank())
d2 <- ggplot(bank, aes(y=balance)) + geom_density() + theme(
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank())
plot_grid(
d1, NULL, point, d2,
ncol = 2, rel_widths = c(3, 1), rel_heights = c(1,3)
)
# bank <- read.csv("C:/Users/Song Yifan/Desktop/NTU/FE8828 Programming Web Application/week 2/code/bank.csv", sep=";")
library(dplyr)
head(bank)
nrow(bank)
ncol(bank)
colnames(bank)
# Find the big age group
min_age <- min(bank$age)
max_age <- max(bank$age)
min_age
max_age
bank %>%
group_by(age_group = (age %/%10)*10) %>%
summarise(count = n()) %>%
arrange(age_group) -> res
res
plot(res$age_group, res$count)
bank %>%
group_by(job) %>%
summarise(balance_mean = mean(balance),
default_proportion = sum(ifelse(default == "no", 0, 1))/n()) -> res1
arrange(res1, balance_mean)
arrange(res1, default_proportion)
bank %>%
group_by(education) %>%
summarise(balance_mean = mean(balance),
default_proportion = sum(ifelse(default == "no", 0, 1))/n()) -> res2
arrange(res2, balance_mean)
arrange(res2, default_proportion)
df <- bank %>%
group_by(default)%>%
summarise(with_housing = sum(housing == "yes") / n(),
with_loan = sum(loan == "yes")/n() )
df
d1 <- group_by(bank, job) %>%
summarise(`balance > 1000` = sum(balance > 1000))
d2 <- group_by(bank, job) %>%
summarise(`balance <= 1000` = sum(balance <= 1000))
df <- distinct(bank, job) %>% arrange(job)
df <- left_join(df,d1, by = "job")
df <- left_join(df, d2, by = "job")
df <- mutate(df, total = `balance > 1000` + `balance <= 1000`)
df <- mutate(df, proportion_larger_than_1000 = `balance > 1000`/total)
arrange(df, proportion_larger_than_1000)
library(ggplot2)
library(dplyr)
# bank <- read.csv("C:/Users/Song Yifan/Desktop/NTU/FE8828 Programming Web Application/week 4/Assignment 4/bank.csv", sep=";")
ggplot(data = bank, mapping = aes(x=duration, fill=job)) + geom_histogram(binwidth = 2) + theme(text = element_text(size=8))
ggplot(bank) +
geom_bar(mapping = aes(x = age, fill = job), position = "fill") +
coord_polar() + theme(text = element_text(size=8))
ggplot(data = bank, mapping = aes(x = reorder(job, age, FUN = median),
fill = education)) + geom_bar() +
scale_x_discrete(limit = rev(levels(factor(bank$job)))) +
coord_flip() + theme(text = element_text(size=8))
ggplot(data = bank) +
geom_point(mapping = aes(x = age, y = balance)) +
facet_wrap(education~loan, nrow = 2) +
theme(text = element_text(size=8))
ggplot(bank, aes(job, balance)) + geom_boxplot() +
theme(text = element_text(size=8),
axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(bank, aes(duration, default)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE, fig.align="center", collapse = TRUE, cache = TRUE)
library(readr)
bank <- read_delim("bank.csv", ";", escape_double = FALSE, trim_ws = TRUE)
library(dplyr)
library(conflicted)
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
employed <- filter(bank, !(job %in% c("unknown", "student", "housemaid", "unemployed", "retired")))
employed %>% group_by(job) %>% summarise(nn = n()) %>%
mutate(percentage = nn/sum(nn)) %>%
arrange(desc(percentage))
unemployed <- filter(bank, job %in% c("student", "housemaid", "unemployed", "retired"))
unemployed %>% group_by(education) %>% summarise(nn = n(), mean_balance = mean(balance)) #%>%
employed %>% group_by(job) %>%
summarise(mean_age = mean(age), median_age = median(age), sd_age = sd(age)) %>%
arrange(mean_age)
empl_hous_perc <- group_by(employed, housing) %>% summarise(nn = n()) %>%
mutate(perc = nn/sum(nn)) %>% {.$perc[.$housing == 'yes']}
#empl_hous_perc
unempl_hous_perc <- group_by(unemployed, housing) %>% summarise(nn = n()) %>%
mutate(perc = nn/sum(nn)) %>% {.$perc[.$housing == 'yes']}
#unempl_hous_perc
dif_hous_perc <- empl_hous_perc - unempl_hous_perc
dif_hous_perc
empl_loan_perc <- nrow(filter(employed, housing == 'yes' & loan == 'yes')) / nrow(employed)
unempl_loan_perc <- nrow(filter(unemployed, housing == 'yes' & loan == 'yes')) / nrow(unemployed)
dif_loan_perc <- empl_loan_perc - unempl_loan_perc
dif_loan_perc
bank %>% group_by(job) %>% summarise(mean_balance = mean(balance)) %>%
mutate(balance_perc = mean_balance/sum(mean_balance)) %>%
arrange(desc(balance_perc))
df1 <- bank %>% group_by(job) %>%
filter(min_rank(balance) == 1 | min_rank(desc(balance)) == 1) %>%
arrange(job, balance) %>%
.[-(23:26), , drop = T]  #delete the unknown-job rows
diff <- c()
diff <- sapply(1:11, function(x){diff <- c(diff, df1$balance[2*x] - df1$balance[2*x-1])})
df2 <- tibble(diff_balance = diff)
diff_bala_job <- cbind(arrange(distinct(bank, job)[-12, ],job), df2)
arrange(diff_bala_job, desc(diff_balance))
library(ggplot2)
bank %>% ggplot() +
geom_bar(mapping = aes(x = job, fill = housing), position = "fill") +
theme(text = element_text(size = 10), axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE, fig.align="center", collapse = TRUE, cache = TRUE)
library(readr)
bank <- read_delim("bank.csv", ";", escape_double = FALSE, trim_ws = TRUE)
library(dplyr)
library(conflicted)
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
library(ggplot2)
ggplot(bank) +
geom_bar(mapping = aes(x = job, fill = housing)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(bank) +
geom_density(aes(x = balance, color = education, fill = education, alpha = 0.3)) +
xlim(0, 10000)
ggplot(bank) +
geom_histogram(mapping = aes(x = age, fill = marital)) +
theme_bw()
ggplot(bank) +
geom_point(mapping = aes(age, balance, color = housing)) +
geom_smooth(mapping = aes(age, balance), method = 'lm', inherit.aes = FALSE) +
ylim(0, 30000) +
theme_bw()
ggplot(bank) +
geom_bar(mapping = aes(job, fill = education), position = "fill") +
coord_polar()
g <- group_by(bank, job, age, housing) %>% summarise(nn=n())
ggplot(g) +
geom_point(data=filter(g, housing=="yes"), aes(job, age, size = nn), alpha=0.3, color='red', shape='circle') +
geom_point(data=filter(g, housing=="no"), aes(job, age, size = nn), alpha=0.3, color='blue', shape='square') +
facet_grid( ~housing) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
library(lubridate)
library(bizdays)
knitr::opts_chunk$set(echo = TRUE, fig.align="center", collapse = TRUE, cache = TRUE)
# bank <- read.csv("https://goo.gl/PBQnBt", sep = ";")
ggplot(bank) +
geom_point(data = bank%>% group_by(job)%>%
summarise(`People with loan` = sum(ifelse(loan == "yes", 1, 0)),
`Total Number of People` = n()), aes(job, `Total Number of People`, col = job, size = 100*`People with loan`/`Total Number of People`), alpha = 0.5, show.legend = c(color = FALSE))+
coord_flip()+
theme(legend.key.size = unit(2, "native"))+
scale_x_discrete(limit = rev(levels(factor(bank$job))))+
scale_size_area(name = "People Having\nLoan (%)")
ggplot(bank%>% mutate(month = {substr(month,1,1) <- toupper(substr(month,1, 1))
factor(month, levels = month.abb)}) %>%
arrange(month))+
geom_bar(aes(month, fill = month, alpha = 0.6), show.legend = FALSE)+
scale_x_discrete(name = "Last Contact Month")+
scale_y_continuous(limits = c(0,1450), breaks = c(0, 200,400,600,800,1000,1200,1400), name = "Total Number")
ggplot(bank%>%
mutate(`Age Group` = case_when(
age < 35 ~ "youth",
age < 58 ~ "middle-age",
age < 65 ~ "senior",
TRUE ~ "retired"
),
duration_diff = duration - mean(duration, na.rm = TRUE)))+
geom_boxplot(aes(factor(`Age Group`,levels = c("youth", "middle-age", "senior", "retired")), duration_diff, fill = `Age Group`, alpha = 0.6), show.legend = FALSE)+
scale_x_discrete(name = "Age Group")+
scale_y_continuous(limits = c(-260,2800), breaks = c(-260,0,700,1400,2100,2800), name = "Duration Deviation")
ggplot(bank, aes(balance, color = job, fill = job, alpha = 0.05)) + geom_density(size = 1) +
scale_x_continuous(limits = c(-20000, 75000), breaks = seq(-20000, 75000, by = 10000))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
scale_y_continuous(limits = c(0,8e-4), breaks = seq(0, 1e-3, by = 1e-4), name = "Density")+
theme_minimal()
ggplot(bank, aes(balance, color = job, fill = job, alpha = 0.05)) + geom_density() +
facet_wrap(~ job, nrow = 2)+
scale_x_continuous(limits = c(-20000, 75000), breaks = c(0, 15000, 60000))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_y_continuous(limits = c(0,8e-4), breaks = seq(0, 1e-3, by = 1e-4), name = "Density")
ggplot(bank, aes(contact, fill = job))+
geom_bar(alpha = 0.8)+
scale_y_continuous(limits = c(0, 3000), breaks = seq(0, 3000, by = 500))+
scale_x_discrete(name = "Contact Method", limit = rev(levels(factor(bank$contact))))+
coord_flip()
ggplot(bank %>% group_by(job, education)%>%
summarise(`Successed Campaign(%)` = 100*sum(ifelse(poutcome == "success", 1, 0))/n())%>%
arrange(desc(`Successed Campaign(%)`)))+
geom_point(aes(job, education, size = `Successed Campaign(%)`, col = job), alpha = 0.8, show.legend = c(color = FALSE))+
coord_flip()+
scale_x_discrete(limit = rev(levels(factor(bank$job))))
library(tidyverse)
library(lubridate)
library(bizdays)
knitr::opts_chunk$set(echo = TRUE, fig.align="center", collapse = TRUE, cache = TRUE)
# bank <- read.csv("https://goo.gl/PBQnBt", sep = ";")
# View(bank)
dt1 <- group_by(bank, job)%>%
summarize(`Total Number of People` = n(),
`People with loan` = sum(ifelse(loan == "yes", 1, 0)),
PercentageLoan = `People with loan`/`Total Number of People`,
`People having credit in default` = sum(ifelse(default == "yes", 1, 0)),
PercentageDefault = `People having credit in default`/`Total Number of People`)
arrange(dt1, desc(PercentageLoan))
dt2<- mutate(bank, `Age Group` = case_when(
age < 35 ~ 1,
age < 58 ~ 2,
age < 65 ~ 3,
TRUE ~ 4
)) %>% mutate(education = case_when(
education == "unknown" ~ 0,
education == "primary" ~ 1,
education == "secondary" ~ 2,
education == "tertiary" ~ 3
))
dt2 <- filter(dt2, !is.na(balance))%>%
group_by(`Age Group`, education)%>%
summarize(`Total People` = n(),
`Total Housing` = sum(ifelse(housing == "yes", 1, 0)),
Percentage = `Total Housing`/`Total People`,
`Average Balane` = mean(balance)) %>%
arrange(desc(`Age Group`), desc(education)) %>%
mutate(`Age Group`= case_when(
`Age Group` == 1 ~ "youth",
`Age Group` == 2 ~ "middle-age",
`Age Group` == 3 ~ "senior",
TRUE ~ "retired")) %>%
mutate(education = case_when(
education == 0 ~ "unknown" ,
education == 1 ~ "primary",
education == 2 ~ "secondary",
education == 3 ~ "tertiary"
))
dt2
dt3 <- filter(bank, !is.na(month)) %>% group_by(month) %>%
summarise(`Total (Last contact)` = n()) %>% mutate(month = {substr(month,1,1) <- toupper(substr(month,1, 1))
factor(month, levels = month.abb)}) %>%
arrange(month)
dt3
dt5 <- filter(bank, !is.na(balance), !is.na(loan))%>%
mutate(`Age Group` = case_when(
age < 35 ~ 1,
age < 58 ~ 2,
age < 65 ~ 3,
TRUE ~ 4
))%>%
transmute(`Age Group`, duration_diff = duration - mean(duration, na.rm = TRUE)) %>%
group_by(`Age Group`)
dt5_1 <- filter(dt5, duration_diff == min(duration_diff))%>%
mutate(`Lower Bound(duration_diff)` = duration_diff)%>%
distinct(`Age Group`, `Lower Bound(duration_diff)`)
dt5_2 <- filter(dt5, duration_diff == max(duration_diff))%>%
mutate(`Upper Bound(duration_diff)` = duration_diff)%>%
distinct(`Age Group`, `Upper Bound(duration_diff)`)
dt5 <- inner_join(dt5_1, dt5_2, by = "Age Group")%>%
arrange(`Age Group`)%>%
mutate(`Age Group`= case_when(
`Age Group` == 1 ~ "youth",
`Age Group` == 2 ~ "middle-age",
`Age Group` == 3 ~ "senior",
TRUE ~ "retired"))
dt5
dt4 <- filter(bank, !is.na(contact))%>%
mutate(`Contact method` = contact)%>%
select(-contact)%>%
group_by(`Contact method`) %>%
summarise(`Total(Number of People)` = n())
dt4
dt6 <- group_by(bank, job)%>%
summarise(`Cellular_qty` = sum(ifelse(contact == "cellular", 1, 0)),
`Telephone_qty` = sum(ifelse(contact == "telephone", 1, 0)))
dt6 <- dt6%>%ungroup()%>%
pivot_longer(col = c("Cellular_qty", "Telephone_qty"), names_to = "type", values_to = "value")%>%
group_by(job)%>%
summarise(value1 = sum(value))%>%
rename(value = value1)%>%
mutate(type = "Total") %>%
pivot_wider(names_from = type, values_from = value)%>%
inner_join(dt6, ., by = "job")%>% #in case the position of job changed
mutate(`Percentage(Cellular)` = Cellular_qty/Total)%>%
select(-Total)
arrange(dt6, desc(`Percentage(Cellular)`))
sum_success <- function(dt)
{
dt %>% summarise(`Successed Campaign(Percentage)` = sum(ifelse(poutcome == "success", 1, 0))/n())
}
dt7_1 <- bank %>% group_by(job, education)%>%
sum_success%>%
arrange(desc(`Successed Campaign(Percentage)`))
dt7_2 <- bank %>% group_by(job, education = "All")%>%
sum_success%>%
arrange(desc(`Successed Campaign(Percentage)`))
dt7_3 <- bank %>% group_by(job = "All", education = "All")%>%
sum_success
dt7 <- bind_rows(dt7_1, dt7_2, dt7_3)
dt7
